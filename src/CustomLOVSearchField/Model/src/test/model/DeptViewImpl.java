/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaItem;
import oracle.jbo.domain.TypeFactory;
import oracle.jbo.server.EntityEvent;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.w3c.dom.Element;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 14 10:17:43 CET 2008
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DeptViewImpl extends CustomViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public DeptViewImpl() {
    }

    private static final String CUSTOM_VCNAME = "LOVSearchCriteria";
    private static final String CUSTOM_VCINAME = "ExtraAttr";
    private boolean isViewCriteriaItemToOverride(ViewCriteriaItem vci) {
        return CUSTOM_VCINAME.equals(vci.getName()) 
               && CUSTOM_VCNAME.equals(vci.getViewCriteria().getName());
    }
    /*
     * This method is called by the overridden getCriteriaItemClause() method
     * in the custom framework extension class CustomViewObjectImpl.
     *
   * If the view criteria item is "ExtraAttr" and the view criteria
   * is "LOVSearchCriteria" then return a custom SQL fragment to use
   * in the query depending on the value of the Boolean-valued
   * "ExtraAttr" criteria item.
   */
    @Override
    protected String getCriteriaItemClauseForDatabaseUse(ViewCriteriaItem vci) {
        if (isViewCriteriaItemToOverride(vci)) {
            // If the criteria item value is TRUE, then return this extra fragment
            if (Boolean.TRUE.equals(getViewCriteriaItemValueAsAttributeType(vci))) {
              return "MOD(DEPTNO,20)=0";
            } 
            // otherwise, return a harmless predicate that doesn't affect the results
            else {
                return "1=1";
            }
        }
        return null;
    }

    private Object getViewCriteriaItemValueAsAttributeType(ViewCriteriaItem vci) {
        /*
     * This method is called by the overridden getCriteriaItemClause() method
     * in the custom framework extension class CustomViewObjectImpl.
     *
     * If the view criteria item is "ExtraAttr" and the view criteria
     * is "LOVSearchCriteria" then return a harmless "1=1" criteria to
     * be used for any in-memory row qualification (effectively neutralizing
     * the "ExtraAttr" from affecting the row qualification) for new rows.
     */
    @Override
    protected String getCriteriaItemClauseForCache(ViewCriteriaItem vci) {
        if (isViewCriteriaItemToOverride(vci)) {
            return "1=1";
        }
        return null;
    }

}
