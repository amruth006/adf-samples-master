/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/SignonImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
public class SignonImpl extends ToyStoreEntityImpl {
  public static final int USERNAME = 0;
  public static final int PASSWORD = 1;
  public static final int ACCOUNT = 2;

  //  protected void validateEntity() {
  //    try {
  //      super.validateEntity();
  //    }
  //    catch (JboException ex) {
  //      if (BC4JExceptionHelper.isOrCausedByDuplicateRow(ex)) {
  //        throw new UserAlreadyExistsException();
  //      }
  //      else {
  //        throw ex;
  //      }
  //    }
  //  }
  private static EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public SignonImpl() {
  }

  /**
   * Expose the create so that AccountsRowImpl can call it (from another package)
   */
  public void create(AttributeList attributeList) {
    super.create(attributeList);
  }
  /**
   *
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl) EntityDefImpl.findDefObject(
          "toystore.model.businessobjects.Signon");
    }
    return mDefinitionObject;
  }
  /**
   * Gets the attribute value for Username, using the alias name Username
   */
  public String getUsername() {
    return (String) getAttributeInternal(USERNAME);
  }
  /**
   * Synchronize the value of composed Account instance
   * Signon and Account are composed 1-to-1
   */
  public void setUsername(String value) {
    setAttributeInternal(USERNAME, value);
  }
  /**
   * Gets the attribute value for Password, using the alias name Password
   */
  public String getPassword() {
    return (String) getAttributeInternal(PASSWORD);
  }
  /**
   * Sets <code>value</code> as the attribute value for Password
   */
  public void setPassword(String value) {
    setAttributeInternal(PASSWORD, value);
  }
  /**
   * Gets the associated entity AccountImpl
   */
  public AccountImpl getAccount() {
    return (AccountImpl) getAttributeInternal(ACCOUNT);
  }
  /**
   * Sets <code>value</code> as the associated entity AccountImpl
   */
  public void setAccount(AccountImpl value) {
    setAttributeInternal(ACCOUNT, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case USERNAME:
      return getUsername();
    case PASSWORD:
      return getPassword();
    case ACCOUNT:
      return getAccount();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case USERNAME:
      setUsername((String) value);
      return;
    case PASSWORD:
      setPassword((String) value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
  /**
   *
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String username) {
    return new Key(new Object[] { username });
  }
}
