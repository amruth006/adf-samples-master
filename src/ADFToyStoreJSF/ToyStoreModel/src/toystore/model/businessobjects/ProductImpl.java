/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/ProductImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
public class ProductImpl extends ToyStoreEntityImpl {
  public static final int PRODUCTID = 0;
  public static final int CATEGORY = 1;
  public static final int NAME = 2;
  public static final int DESCN = 3;
  public static final int PICTURE = 4;
  public static final int CATEGORY1 = 5;
  public static final int ITEM = 6;
  private static EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public ProductImpl() {
  }

  /**
   *
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl) EntityDefImpl.findDefObject(
          "toystore.model.businessobjects.Product");
    }
    return mDefinitionObject;
  }
  /**
   * Gets the attribute value for Productid, using the alias name Productid
   */
  public String getProductid() {
    return (String) getAttributeInternal(PRODUCTID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Productid
   */
  public void setProductid(String value) {
    setAttributeInternal(PRODUCTID, value);
  }
  /**
   * Gets the attribute value for Category, using the alias name Category
   */
  public String getCategory() {
    return (String) getAttributeInternal(CATEGORY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Category
   */
  public void setCategory(String value) {
    setAttributeInternal(CATEGORY, value);
  }
  /**
   * Gets the attribute value for Name, using the alias name Name
   */
  public String getName() {
    return (String) getAttributeInternal(NAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Name
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }
  /**
   * Gets the attribute value for Descn, using the alias name Descn
   */
  public String getDescn() {
    return (String) getAttributeInternal(DESCN);
  }
  /**
   * Sets <code>value</code> as the attribute value for Descn
   */
  public void setDescn(String value) {
    setAttributeInternal(DESCN, value);
  }
  /**
   * Gets the associated entity CategoryImpl
   */
  public ToyStoreEntityImpl getCategory1() {
    return (ToyStoreEntityImpl) getAttributeInternal(CATEGORY1);
  }
  /**
   * Sets <code>value</code> as the associated entity CategoryImpl
   */
  public void setCategory1(ToyStoreEntityImpl value) {
    setAttributeInternal(CATEGORY1, value);
  }
  /**
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getItem() {
    return (RowIterator) getAttributeInternal(ITEM);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case PRODUCTID:
      return getProductid();
    case CATEGORY:
      return getCategory();
    case NAME:
      return getName();
    case DESCN:
      return getDescn();
    case PICTURE:
      return getPicture();
    case ITEM:
      return getItem();
    case CATEGORY1:
      return getCategory1();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case PRODUCTID:
      setProductid((String) value);
      return;
    case CATEGORY:
      setCategory((String) value);
      return;
    case NAME:
      setName((String) value);
      return;
    case DESCN:
      setDescn((String) value);
      return;
    case PICTURE:
      setPicture((String) value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
  /**
   *
   * Gets the attribute value for Picture, using the alias name Picture
   */
  public String getPicture() {
    return (String) getAttributeInternal(PICTURE);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for Picture
   */
  public void setPicture(String value) {
    setAttributeInternal(PICTURE, value);
  }
  /**
   *
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String productid) {
    return new Key(new Object[] { productid });
  }
}
