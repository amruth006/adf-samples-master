/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/ProfileImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
public class ProfileImpl extends ToyStoreEntityImpl {
  public static final int USERID = 0;
  public static final int LANGPREF = 1;
  public static final int FAVCATEGORY = 2;
  public static final int MYLISTOPT = 3;
  public static final int BANNEROPT = 4;
  public static final int ACCOUNT = 5;
  private static EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public ProfileImpl() {
  }

  /**
   *
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl) EntityDefImpl.findDefObject(
          "toystore.model.businessobjects.Profile");
    }
    return mDefinitionObject;
  }
  /**
   * Gets the attribute value for Userid, using the alias name Userid
   */
  public String getUserid() {
    return (String) getAttributeInternal(USERID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Userid
   */
  public void setUserid(String value) {
    setAttributeInternal(USERID, value);
  }
  /**
   * Gets the attribute value for Langpref, using the alias name Langpref
   */
  public String getLangpref() {
    return (String) getAttributeInternal(LANGPREF);
  }
  /**
   * Sets <code>value</code> as the attribute value for Langpref
   */
  public void setLangpref(String value) {
    setAttributeInternal(LANGPREF, value);
  }
  /**
   * Gets the attribute value for Favcategory, using the alias name Favcategory
   */
  public String getFavcategory() {
    return (String) getAttributeInternal(FAVCATEGORY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Favcategory
   */
  public void setFavcategory(String value) {
    setAttributeInternal(FAVCATEGORY, value);
  }
  /**
   * Gets the attribute value for Mylistopt, using the alias name Mylistopt
   */
  public Number getMylistopt() {
    return (Number) getAttributeInternal(MYLISTOPT);
  }
  /**
   * Sets <code>value</code> as the attribute value for Mylistopt
   */
  public void setMylistopt(Number value) {
    setAttributeInternal(MYLISTOPT, value);
  }
  /**
   * Gets the attribute value for Banneropt, using the alias name Banneropt
   */
  public Number getBanneropt() {
    return (Number) getAttributeInternal(BANNEROPT);
  }
  /**
   * Sets <code>value</code> as the attribute value for Banneropt
   */
  public void setBanneropt(Number value) {
    setAttributeInternal(BANNEROPT, value);
  }
  /**
   * Gets the associated entity AccountImpl
   */
  public AccountImpl getAccount() {
    return (AccountImpl) getAttributeInternal(ACCOUNT);
  }
  /**
   * Sets <code>value</code> as the associated entity AccountImpl
   */
  public void setAccount(AccountImpl value) {
    setAttributeInternal(ACCOUNT, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case USERID:
      return getUserid();
    case LANGPREF:
      return getLangpref();
    case FAVCATEGORY:
      return getFavcategory();
    case MYLISTOPT:
      return getMylistopt();
    case BANNEROPT:
      return getBanneropt();
    case ACCOUNT:
      return getAccount();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case USERID:
      setUserid((String) value);
      return;
    case LANGPREF:
      setLangpref((String) value);
      return;
    case FAVCATEGORY:
      setFavcategory((String) value);
      return;
    case MYLISTOPT:
      setMylistopt((Number) value);
      return;
    case BANNEROPT:
      setBanneropt((Number) value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
  /**
   *
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String userid) {
    return new Key(new Object[] { userid });
  }
}
