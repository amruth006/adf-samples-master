/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/LineitemImpl.java,v 1.1.1.1 2006/01/26 21:47:20 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
public class LineitemImpl extends ToyStoreEntityImpl {
  public static final int ORDERID = 0;
  public static final int LINENUM = 1;
  public static final int ITEMID = 2;
  public static final int QUANTITY = 3;
  public static final int UNITPRICE = 4;
  public static final int ITEM = 5;
  public static final int ORDERS = 6;
  private static EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public LineitemImpl() {}

  /**
   *
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl) EntityDefImpl.findDefObject(
          "toystore.model.businessobjects.Lineitem");
    }
    return mDefinitionObject;
  }
  /**
   * Gets the attribute value for Orderid, using the alias name Orderid
   */
  public DBSequence getOrderid() {
    return (DBSequence) getAttributeInternal(ORDERID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Orderid
   */
  public void setOrderid(DBSequence value) {
    setAttributeInternal(ORDERID, value);
  }
  /**
   * Gets the attribute value for Linenum, using the alias name Linenum
   */
  public Number getLinenum() {
    return (Number) getAttributeInternal(LINENUM);
  }
  /**
   * Sets <code>value</code> as the attribute value for Linenum
   */
  public void setLinenum(Number value) {
    setAttributeInternal(LINENUM, value);
  }
  /**
   * Gets the attribute value for Itemid, using the alias name Itemid
   */
  public String getItemid() {
    return (String) getAttributeInternal(ITEMID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Itemid
   */
  public void setItemid(String value) {
    setAttributeInternal(ITEMID, value);
  }
  /**
   * Gets the attribute value for Quantity, using the alias name Quantity
   */
  public Number getQuantity() {
    return (Number) getAttributeInternal(QUANTITY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Quantity
   */
  public void setQuantity(Number value) {
    setAttributeInternal(QUANTITY, value);
  }
  /**
   * Gets the attribute value for Unitprice, using the alias name Unitprice
   */
  public Number getUnitprice() {
    return (Number) getAttributeInternal(UNITPRICE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Unitprice
   */
  public void setUnitprice(Number value) {
    setAttributeInternal(UNITPRICE, value);
  }
  /**
   * Gets the associated entity ItemImpl
   */
  public ItemImpl getItem() {
    return (ItemImpl) getAttributeInternal(ITEM);
  }
  /**
   * Sets <code>value</code> as the associated entity ItemImpl
   */
  public void setItem(ItemImpl value) {
    setAttributeInternal(ITEM, value);
  }
  /**
   * Gets the associated entity OrdersImpl
   */
  public OrdersImpl getOrders() {
    return (OrdersImpl) getAttributeInternal(ORDERS);
  }
  /**
   * Sets <code>value</code> as the associated entity OrdersImpl
   */
  public void setOrders(OrdersImpl value) {
    setAttributeInternal(ORDERS, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case ORDERID:
      return getOrderid();
    case LINENUM:
      return getLinenum();
    case ITEMID:
      return getItemid();
    case QUANTITY:
      return getQuantity();
    case UNITPRICE:
      return getUnitprice();
    case ITEM:
      return getItem();
    case ORDERS:
      return getOrders();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case ORDERID:
      setOrderid((DBSequence) value);
      return;
    case LINENUM:
      setLinenum((Number) value);
      return;
    case ITEMID:
      setItemid((String) value);
      return;
    case QUANTITY:
      setQuantity((Number) value);
      return;
    case UNITPRICE:
      setUnitprice((Number) value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
  /**
   *
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(DBSequence orderid, Number linenum) {
    return new Key(new Object[] { orderid, linenum });
  }
}
