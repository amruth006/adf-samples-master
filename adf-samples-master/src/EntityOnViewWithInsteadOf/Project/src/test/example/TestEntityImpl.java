/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.example;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---------------------------------------------------------------------

public class TestEntityImpl extends EntityImpl  {
  public static final int V = 0;
  public static final int OTHERUNIQUEVALUE = 1;
  public static final int ROWID = 2;



  private static TestEntityDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public TestEntityImpl() {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (TestEntityDefImpl)EntityDefImpl.findDefObject("test.example.TestEntity");
    }
    return mDefinitionObject;
  }




  /**
   * 
   *  Gets the attribute value for V, using the alias name V
   */
  public String getV() {
    return (String)getAttributeInternal(V);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for V
   */
  public void setV(String value) {
    setAttributeInternal(V, value);
  }

  /**
   * 
   *  Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID() {
    return (RowID)getAttributeInternal(ROWID);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case V:
        return getV();
      case OTHERUNIQUEVALUE:
        return getOtherUniqueValue();
      case ROWID:
        return getRowID();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case V:
        setV((String)value);
        return;
      case OTHERUNIQUEVALUE:
        setOtherUniqueValue((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   *  Gets the attribute value for OtherUniqueValue, using the alias name OtherUniqueValue
   */
  public String getOtherUniqueValue() {
    return (String)getAttributeInternal(OTHERUNIQUEVALUE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for OtherUniqueValue
   */
  public void setOtherUniqueValue(String value) {
    setAttributeInternal(OTHERUNIQUEVALUE, value);
  }
}
