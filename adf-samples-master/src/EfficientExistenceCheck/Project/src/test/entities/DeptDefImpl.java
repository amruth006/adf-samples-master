/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.entities;

import com.sun.java.util.collections.Iterator;

import oracle.jbo.ViewObject;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.Entity;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DeptDefImpl extends EntityDefImpl {
  /**This is the default constructor (do not remove)
   */
  public DeptDefImpl() {
  }
  /**
   * Return true if the Dept entity exists based on the supplied dname
   * 
   * NOTE: The test is performed case-insensitively by choice here.
   */
  public boolean existsByDname(DBTransaction trans, String dname) {
    boolean foundIt = false;
    ViewObject vo = getExistenceCheckByDnameView(trans);
    vo.setNamedWhereClauseParam("TheName",dname);
    vo.setForwardOnly(true);
    vo.executeQuery();
    foundIt = (vo.first() != null);
    /*   
     * If we didn't find it in the database,
     * try checking against any new departments in cache
     */
    if (!foundIt) {
      Iterator iter = getAllEntityInstancesIterator(trans);
      while (iter.hasNext()) {
        DeptImpl dept = (DeptImpl)iter.next();
        /*
         * NOTE: If you allow your primary key attribute to be modifiable
         *       then you should also check for entities with entity state
         *       of Entity.STATUS_MODIFIED here as well.
         */
        if (dept.getEntityState() == Entity.STATUS_NEW
            && dname.equalsIgnoreCase(dept.getDname())) {
          foundIt = true;
          break;
        }
      }
    }  
    return foundIt;
  }
  private ViewObject getExistenceCheckByDnameView(DBTransaction trans) {
    return getValidationVO(trans,"test.entities.validationqueries.FindDeptByUniqueDname");
  }

  /**
   * Find instance of view object used for validation purposes in the
   * root application module. By convention, the instance of the view
   * object will be named Validation_your_pkg_YourViewObject.
   *
   * If not found, create it for the first time.
   *
   * @return ViewObject to use for validation purposes
   * @param viewObjectDefName
   */
  protected ViewObject getValidationVO(DBTransaction trans, String viewObjectDefName) {
    // Create a new name for the VO instance being used for validation
    String name = "Validation_" + viewObjectDefName.replace('.', '_');
    // Try to see if an instance of this name already exists
    ViewObject vo = trans.getRootApplicationModule().findViewObject(name);
    // If it doesn't already exist, create it using the definition name
    if (vo == null) {
      vo = trans.getRootApplicationModule().createViewObject(name,viewObjectDefName);
    }
    return vo;
  }  
}
