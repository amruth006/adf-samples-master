/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package paramform.model.entities;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ParameterFormItemSetImpl extends EntityImpl {
  public static final int PARAMETERDEFINITIONID = 0;
  public static final int PARAMETERFORMDEFINITIONID = 1;
  public static final int PARAMETERDEFINITION = 2;
  public static final int PARAMETERFORMDEFINITION = 3;
  private static EntityDefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
  public ParameterFormItemSetImpl() {
  }

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("paramform.model.entities.ParameterFormItemSet");
    }
    return mDefinitionObject;
  }

  /**Gets the attribute value for ParameterDefinitionId, using the alias name ParameterDefinitionId
   */
  public String getParameterDefinitionId() {
    return (String)getAttributeInternal(PARAMETERDEFINITIONID);
  }

  /**Sets <code>value</code> as the attribute value for ParameterDefinitionId
   */
  public void setParameterDefinitionId(String value) {
    setAttributeInternal(PARAMETERDEFINITIONID, value);
  }

  /**Gets the attribute value for ParameterFormDefinitionId, using the alias name ParameterFormDefinitionId
   */
  public String getParameterFormDefinitionId() {
    return (String)getAttributeInternal(PARAMETERFORMDEFINITIONID);
  }

  /**Sets <code>value</code> as the attribute value for ParameterFormDefinitionId
   */
  public void setParameterFormDefinitionId(String value) {
    setAttributeInternal(PARAMETERFORMDEFINITIONID, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, 
                                         AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case PARAMETERDEFINITIONID:
      return getParameterDefinitionId();
    case PARAMETERFORMDEFINITIONID:
      return getParameterFormDefinitionId();
    case PARAMETERDEFINITION:
      return getParameterDefinition();
    case PARAMETERFORMDEFINITION:
      return getParameterFormDefinition();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, 
                                       AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case PARAMETERDEFINITIONID:
      setParameterDefinitionId((String)value);
      return;
    case PARAMETERFORMDEFINITIONID:
      setParameterFormDefinitionId((String)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }

  /**Gets the associated entity ParameterDefinitionImpl
   */
  public ParameterDefinitionImpl getParameterDefinition() {
    return (ParameterDefinitionImpl)getAttributeInternal(PARAMETERDEFINITION);
  }

  /**Sets <code>value</code> as the associated entity ParameterDefinitionImpl
   */
  public void setParameterDefinition(ParameterDefinitionImpl value) {
    setAttributeInternal(PARAMETERDEFINITION, value);
  }

  /**Gets the associated entity ParameterFormDefinitionImpl
   */
  public ParameterFormDefinitionImpl getParameterFormDefinition() {
    return (ParameterFormDefinitionImpl)getAttributeInternal(PARAMETERFORMDEFINITION);
  }

  /**Sets <code>value</code> as the associated entity ParameterFormDefinitionImpl
   */
  public void setParameterFormDefinition(ParameterFormDefinitionImpl value) {
    setAttributeInternal(PARAMETERFORMDEFINITION, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String parameterDefinitionId, 
                                     String parameterFormDefinitionId) {
    return new Key(new Object[]{parameterDefinitionId, parameterFormDefinitionId});
  }
}
