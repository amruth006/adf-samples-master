/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;

import java.util.HashMap;
import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.Session;
import oracle.jbo.server.ApplicationModuleImpl;


import oracle.jbo.server.ViewObjectImpl;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import test.model.common.ExampleModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 16 12:48:30 CET 2009
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ExampleModuleImpl extends ApplicationModuleImpl implements ExampleModule {
    private static final String FAVORITE_COLOR = "FavoriteColor";
    private static final String USER_INFO = "UserInfo";
    private static final String DEFAULT_FAVORITE_COLOR = "fered";

    /**
     * This is the default constructor (do not remove).
     */
    public ExampleModuleImpl() {
    }
    public String getSessionFavoriteColor() {
      return (String)getDBTransaction().getSession().getUserData().get(FAVORITE_COLOR);
        
    }
    public void setSessionFavoriteColor(String color) {
        String previousFavoriteColor = getSessionFavoriteColor();
        getDBTransaction().getSession().getUserData().put(FAVORITE_COLOR,color);
        if (valueChanged(previousFavoriteColor,color)) {
            getExampleVO().executeQuery();
        }
    }

    @Override
    protected void prepareSession(Session session) {
        super.prepareSession(session);
        setDefaultValuesForSessionLevelFavoriteColor();
    }

    private void setDefaultValuesForSessionLevelFavoriteColor() {
        if (getSessionFavoriteColor() == null) {
            setSessionFavoriteColor(DEFAULT_FAVORITE_COLOR);
        }
        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        if (sessionScope.get(USER_INFO) == null) {
            Map userInfo = new HashMap();
            userInfo.put("favoriteColor",DEFAULT_FAVORITE_COLOR);
            sessionScope.put(USER_INFO,userInfo);
        }
    }
    /**
     * Container's getter for ExampleVO.
     * @return ExampleVO
     */
    public ViewObjectImpl getExampleVO() {
        return (ViewObjectImpl)findViewObject("ExampleVO");
    }

    /*
     * Save the current value of the user session 'FavoriteColor' entry
     * during passivation
     */
    @Override
    protected void passivateState(Document doc, Element parent) {
        parent.setAttribute(FAVORITE_COLOR,getSessionFavoriteColor());
        super.passivateState(doc, parent);
    }

    /*
     * Restore the current value of the user session 'FavoriteColor' entry
     * during activation
     */
    @Override
    protected void activateState(Element parent) {
        super.activateState(parent);
        setSessionFavoriteColor(parent.getAttribute(FAVORITE_COLOR));
    }
    
    private boolean valueChanged(String x, String y) {
        return ((x == null && y != null)
                 ||
                 (x != null && y == null)
                 ||
                 (x != null && y != null && !x.equals(y)));
    }

    /**
     * Container's getter for ExampleVO2.
     * @return ExampleVO2
     */
    public ViewObjectImpl getExampleVO2() {
        return (ViewObjectImpl)findViewObject("ExampleVO2");
    }
}
