/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.0.0, build 060119.1546.05277)

package remoteservices.runtime;

import oracle.j2ee.ws.client.BasicService;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.encoding.soap.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class DeptService_Service_SerializerRegistry extends SerializerRegistryBase implements SerializerConstants {
    public DeptService_Service_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping11 = registry.getTypeMapping(SOAPEncodingConstants.getSOAPEncodingConstants(SOAPVersion.SOAP_11).getURIEncoding());
        TypeMapping mapping = registry.getTypeMapping("");
        {
            QName type = new QName("urn:DeptService-example", "mergeDepartment");
            CombinedSerializer serializer = new remoteservices.runtime.MergeDepartment_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.MergeDepartment.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "findDepartmentByDeptnoResponse");
            CombinedSerializer serializer = new remoteservices.runtime.FindDepartmentByDeptnoResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.FindDepartmentByDeptnoResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "findDepartmentByDeptno");
            CombinedSerializer serializer = new remoteservices.runtime.FindDepartmentByDeptno_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.FindDepartmentByDeptno.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "mergeDepartmentResponse");
            CombinedSerializer serializer = new remoteservices.runtime.MergeDepartmentResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.MergeDepartmentResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "updateDepartment");
            CombinedSerializer serializer = new remoteservices.runtime.UpdateDepartment_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.UpdateDepartment.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "updateDepartmentResponse");
            CombinedSerializer serializer = new remoteservices.runtime.UpdateDepartmentResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.UpdateDepartmentResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://deptws.server.webservice/types/", "Department");
            CombinedSerializer serializer = new remoteservices.types.deptws.server.webservice.types.runtime.Department_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.types.deptws.server.webservice.types.Department.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "deleteDepartmentByDeptnoResponse");
            CombinedSerializer serializer = new remoteservices.runtime.DeleteDepartmentByDeptnoResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.DeleteDepartmentByDeptnoResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "deleteDepartmentByDeptno");
            CombinedSerializer serializer = new remoteservices.runtime.DeleteDepartmentByDeptno_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.DeleteDepartmentByDeptno.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "estimateCount");
            CombinedSerializer serializer = new remoteservices.runtime.EstimateCount_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.EstimateCount.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "insertDepartmentResponse");
            CombinedSerializer serializer = new remoteservices.runtime.InsertDepartmentResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.InsertDepartmentResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "retrieveDepartmentDataResponse");
            CombinedSerializer serializer = new remoteservices.runtime.RetrieveDepartmentDataResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.RetrieveDepartmentDataResponse.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "insertDepartment");
            CombinedSerializer serializer = new remoteservices.runtime.InsertDepartment_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.InsertDepartment.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "retrieveDepartmentData");
            CombinedSerializer serializer = new remoteservices.runtime.RetrieveDepartmentData_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.RetrieveDepartmentData.class, type, serializer);
        }
        {
            QName type = new QName("urn:DeptService-example", "estimateCountResponse");
            CombinedSerializer serializer = new remoteservices.runtime.EstimateCountResponse_LiteralSerializer(type, DONT_ENCODE_TYPE);
            registerSerializer(mapping,remoteservices.EstimateCountResponse.class, type, serializer);
        }
        remoteservices.runtime.DeptService_Service_SerializerRegistry12 internal12Registry = new remoteservices.runtime.DeptService_Service_SerializerRegistry12();
        return internal12Registry.getRegistry(registry);
    }
    
    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
