/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import test.model.common.AppModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 20 12:30:39 CET 2009
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }
    private static final String EMPVIEWDEFNAME = "test.model.EmpView";
    public void moveSelectedEmployeeNodeUpInRowIterator(RowIterator ri, Key selectedEmpKey) {
        if (ri != null && selectedEmpKey != null) {
            if (EMPVIEWDEFNAME.equals(((RowSetIterator)ri).getRowSet().getViewObject().getDefFullName())) {
                Row first = ri.first();
                Key firstRowKey = first.getKey();
                // if the select row is not the first row in the row iterator...
                if (!selectedEmpKey.equals(firstRowKey)) {
                    Row[] found = ri.findByKey(selectedEmpKey,1);
                    if (found != null && found.length == 1) {
                      Row foundRow = found[0];
                      ri.setCurrentRow(foundRow);
                      Row previousRow = ri.previous();
                      long foundSeq = ((Number)foundRow.getAttribute("EmpRank")).longValue();
                      foundRow.setAttribute("EmpRank",foundSeq-1);
                      previousRow.setAttribute("EmpRank",foundSeq);
                      foundRow.removeAndRetain();
                      ri.setCurrentRow(previousRow);
                      ri.insertRowAtRangeIndex(ri.getCurrentRowIndex(),foundRow);
                    }
                    else {
                        throw new JboException("Did not find row with key "+selectedEmpKey+" in RowIterator "+((RowSetIterator)ri).getName());
                    }
                }
            }
            else {
                throw new JboException("Expecting RowIterator for an EmpView view object");
            }
        }
    }    
    public void moveSelectedEmployeeNodeDownInRowIterator(RowIterator ri, Key selectedEmpKey) {
        if (ri != null && selectedEmpKey != null) {
            if (EMPVIEWDEFNAME.equals(((RowSetIterator)ri).getRowSet().getViewObject().getDefFullName())) {

                Row last = ri.last();
                Key lastRowKey = last.getKey();
                // if the select row is not the last row in the row iterator...
                if (!selectedEmpKey.equals(lastRowKey)) {
                    Row[] found = ri.findByKey(selectedEmpKey,1);
                    if (found != null && found.length == 1) {
                      Row foundRow = found[0];
                      ri.setCurrentRow(foundRow);
                      Row nextRow = ri.next();
                      long foundSeq = ((Number)foundRow.getAttribute("EmpRank")).longValue();
                      foundRow.setAttribute("EmpRank",foundSeq+1);
                      nextRow.setAttribute("EmpRank",foundSeq);
                      foundRow.removeAndRetain();
                      ri.setCurrentRow(nextRow);
                      ri.insertRowAtRangeIndex(ri.getCurrentRowIndex()+1,foundRow);
                    }
                    else {
                        throw new JboException("Did not find row with key "+selectedEmpKey+" in RowIterator "+((RowSetIterator)ri).getName());
                    }
                }
            }
            else {
                throw new JboException("Expecting RowIterator for an EmpView view object");
            }            
        }
    }
    /**
     * Container's getter for Departments.
     * @return Departments
     */
    public ViewObjectImpl getDepartments() {
        return (ViewObjectImpl)findViewObject("Departments");
    }
}
