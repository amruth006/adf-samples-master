/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 28 07:58:09 PDT 2009
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Empno {
            public Object get(EmpViewRowImpl obj) {
                return obj.getEmpno();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setEmpno((Number)value);
            }
        }
        ,
        Ename {
            public Object get(EmpViewRowImpl obj) {
                return obj.getEname();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setEname((String)value);
            }
        }
        ,
        Job {
            public Object get(EmpViewRowImpl obj) {
                return obj.getJob();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setJob((String)value);
            }
        }
        ,
        Mgr {
            public Object get(EmpViewRowImpl obj) {
                return obj.getMgr();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setMgr((Number)value);
            }
        }
        ,
        Hiredate {
            public Object get(EmpViewRowImpl obj) {
                return obj.getHiredate();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setHiredate((Date)value);
            }
        }
        ,
        Sal {
            public Object get(EmpViewRowImpl obj) {
                return obj.getSal();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setSal((Number)value);
            }
        }
        ,
        Comm {
            public Object get(EmpViewRowImpl obj) {
                return obj.getComm();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setComm((Number)value);
            }
        }
        ,
        Deptno {
            public Object get(EmpViewRowImpl obj) {
                return obj.getDeptno();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setDeptno((Number)value);
            }
        }
        ,
        ValueUsingVOFunction {
            public Object get(EmpViewRowImpl obj) {
                return obj.getValueUsingVOFunction();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setValueUsingVOFunction((String)value);
            }
        }
        ,
        ValueUsingVORowFunction {
            public Object get(EmpViewRowImpl obj) {
                return obj.getValueUsingVORowFunction();
            }

            public void put(EmpViewRowImpl obj, Object value) {
                obj.setValueUsingVORowFunction((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(EmpViewRowImpl object);

        public abstract void put(EmpViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EMPNO = AttributesEnum.Empno.index();
    public static final int ENAME = AttributesEnum.Ename.index();
    public static final int JOB = AttributesEnum.Job.index();
    public static final int MGR = AttributesEnum.Mgr.index();
    public static final int HIREDATE = AttributesEnum.Hiredate.index();
    public static final int SAL = AttributesEnum.Sal.index();
    public static final int COMM = AttributesEnum.Comm.index();
    public static final int DEPTNO = AttributesEnum.Deptno.index();

    public String myFunctionAtVORowLevel(Object n) {
        System.out.println("myFunctionAtVORowLevel called for "+getKey());
        System.out.println("Object passed to function is of type "+n.getClass().getName());
        return "["+n+"]";
    }

    public static final int VALUEUSINGVOFUNCTION = AttributesEnum.ValueUsingVOFunction.index();

    public static final int VALUEUSINGVOROWFUNCTION = AttributesEnum.ValueUsingVORowFunction.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmpViewRowImpl() {
    }

    /**
     * Gets Emp entity object.
     * @return the Emp
     */
    public EntityImpl getEmp() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for EMPNO using the alias name Empno.
     * @return the EMPNO
     */
    public Number getEmpno() {
        return (Number) getAttributeInternal(EMPNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPNO using the alias name Empno.
     * @param value value to set the EMPNO
     */
    public void setEmpno(Number value) {
        setAttributeInternal(EMPNO, value);
    }

    /**
     * Gets the attribute value for ENAME using the alias name Ename.
     * @return the ENAME
     */
    public String getEname() {
        return (String) getAttributeInternal(ENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for ENAME using the alias name Ename.
     * @param value value to set the ENAME
     */
    public void setEname(String value) {
        setAttributeInternal(ENAME, value);
    }

    /**
     * Gets the attribute value for JOB using the alias name Job.
     * @return the JOB
     */
    public String getJob() {
        return (String) getAttributeInternal(JOB);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB using the alias name Job.
     * @param value value to set the JOB
     */
    public void setJob(String value) {
        setAttributeInternal(JOB, value);
    }

    /**
     * Gets the attribute value for MGR using the alias name Mgr.
     * @return the MGR
     */
    public Number getMgr() {
        return (Number) getAttributeInternal(MGR);
    }

    /**
     * Sets <code>value</code> as attribute value for MGR using the alias name Mgr.
     * @param value value to set the MGR
     */
    public void setMgr(Number value) {
        setAttributeInternal(MGR, value);
    }

    /**
     * Gets the attribute value for HIREDATE using the alias name Hiredate.
     * @return the HIREDATE
     */
    public Date getHiredate() {
        return (Date) getAttributeInternal(HIREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for HIREDATE using the alias name Hiredate.
     * @param value value to set the HIREDATE
     */
    public void setHiredate(Date value) {
        setAttributeInternal(HIREDATE, value);
    }

    /**
     * Gets the attribute value for SAL using the alias name Sal.
     * @return the SAL
     */
    public Number getSal() {
        return (Number) getAttributeInternal(SAL);
    }

    /**
     * Sets <code>value</code> as attribute value for SAL using the alias name Sal.
     * @param value value to set the SAL
     */
    public void setSal(Number value) {
        setAttributeInternal(SAL, value);
    }

    /**
     * Gets the attribute value for COMM using the alias name Comm.
     * @return the COMM
     */
    public Number getComm() {
        return (Number) getAttributeInternal(COMM);
    }

    /**
     * Sets <code>value</code> as attribute value for COMM using the alias name Comm.
     * @param value value to set the COMM
     */
    public void setComm(Number value) {
        setAttributeInternal(COMM, value);
    }

    /**
     * Gets the attribute value for DEPTNO using the alias name Deptno.
     * @return the DEPTNO
     */
    public Number getDeptno() {
        return (Number) getAttributeInternal(DEPTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPTNO using the alias name Deptno.
     * @param value value to set the DEPTNO
     */
    public void setDeptno(Number value) {
        setAttributeInternal(DEPTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValueUsingVOFunction.
     * @return the ValueUsingVOFunction
     */
    public String getValueUsingVOFunction() {
        return (String) getAttributeInternal(VALUEUSINGVOFUNCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValueUsingVOFunction.
     * @param value value to set the  ValueUsingVOFunction
     */
    public void setValueUsingVOFunction(String value) {
        setAttributeInternal(VALUEUSINGVOFUNCTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValueUsingVORowFunction.
     * @return the ValueUsingVORowFunction
     */
    public String getValueUsingVORowFunction() {
        return (String) getAttributeInternal(VALUEUSINGVOROWFUNCTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValueUsingVORowFunction.
     * @param value value to set the  ValueUsingVORowFunction
     */
    public void setValueUsingVORowFunction(String value) {
        setAttributeInternal(VALUEUSINGVOROWFUNCTION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
