/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package demo.model;
import demo.model.common.TestModule;

import java.util.HashMap;
import java.util.Map;

import oracle.jbo.AttributeDef;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.Session;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TestModuleImpl extends ApplicationModuleImpl implements TestModule {
  /**This is the default constructor (do not remove)
   */
  public TestModuleImpl() {
  }

  /**Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args) {
    launchTester("demo.model", /* package name */
      "TestModuleLocal" /* Configuration Name */);
  }
  protected void prepareSession(Session Session) {
    super.prepareSession(Session);
    populateEmpMetadataView();
  }
  public Map retrieveMapOfSelectedAttributeNames() {
    System.out.println("----[retrieveMapOfSelectedAttributeNames called]-----");
    RowSetIterator rsi = getEmpViewMetadata().createRowSetIterator(null);
    Map m = new HashMap();
    while (rsi.hasNext()) {
      Row r = rsi.next();
      m.put(r.getAttribute("AttributeName"),r.getAttribute("Selected"));
    }
    rsi.closeRowSetIterator();
    return m;
  }
  public void populateEmpMetadataView() {
    /*
     * Populate the transient "EmpViewMeta" view objects
     * with rows that contain the attribute names of
     * the "EmpView" view object.
     */
    ViewObject empViewMeta = getEmpViewMetadata();
    ViewObject empVO = getEmpView();
    for (AttributeDef attrDef : empVO.getAttributeDefs()) {
      Row r = empViewMeta.createRow();
      r.setAttribute("AttributeName",attrDef.getName());
      r.setAttribute("AttributeLabelText",attrDef.getUIHelper().getLabel(getDBTransaction().getSession().getLocaleContext()));
      empViewMeta.insertRow(r);
    }    
  }
  public void resetEmpMetadataView() {
    RowSetIterator rsi = getEmpViewMetadata().createRowSetIterator(null);
    while (rsi.hasNext()) {
      rsi.next().setAttribute("Selected",Boolean.FALSE);
    }
    rsi.closeRowSetIterator();
  }

  /**Container's getter for EmpView
   */
  public ViewObjectImpl getEmpView() {
    return (ViewObjectImpl)findViewObject("EmpView");
  }

  /**Container's getter for EmpViewMetadata
   */
  public ViewObjectImpl getEmpViewMetadata() {
    return (ViewObjectImpl)findViewObject("EmpViewMetadata");
  }
}
