/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/OrdersImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.AttrValException;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.HasAttributeGroups;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
import toystore.model.businessobjects.common.OrdersImplMsgBundle;
import toystore.model.datatypes.common.CreditCardNumber;
import toystore.model.datatypes.common.ExpirationDate;
public class OrdersImpl extends ToyStoreEntityImpl implements HasAttributeGroups {
  public static final int ORDERID = 0;
  public static final int USERID = 1;
  public static final int ORDERDATE = 2;
  public static final int SHIPADDR1 = 3;
  public static final int SHIPADDR2 = 4;
  public static final int SHIPCITY = 5;
  public static final int SHIPSTATE = 6;
  public static final int SHIPZIP = 7;
  public static final int SHIPCOUNTRY = 8;
  public static final int BILLADDR1 = 9;
  public static final int BILLADDR2 = 10;
  public static final int BILLCITY = 11;
  public static final int BILLSTATE = 12;
  public static final int BILLZIP = 13;
  public static final int BILLCOUNTRY = 14;
  public static final int COURIER = 15;
  public static final int TOTALPRICE = 16;
  public static final int BILLTOFIRSTNAME = 17;
  public static final int BILLTOLASTNAME = 18;
  public static final int SHIPTOFIRSTNAME = 19;
  public static final int SHIPTOLASTNAME = 20;
  public static final int CREDITCARD = 21;
  public static final int EXPRDATE = 22;
  public static final int CARDTYPE = 23;
  public static final int LOCALE = 24;
  public static final int COUNTRYSTATEVALID = 25;
  public static final int ACCOUNT = 26;
  public static final int LINEITEM = 27;
  public static final int ORDERSTATUS = 28;
  private static EntityDefImpl mDefinitionObject;

  /**
   * This is the default constructor (do not remove)
   */
  public OrdersImpl() {}
  //--[Begin Custom Code]--

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("toystore.model.businessobjects.Orders");
    }
    return mDefinitionObject;
  }

  /**
   * Since this custom method-based validation rule depends on two different
   * attributes (Creditcard & Exprdate) we implement it as a business
   * object-level validation rule. Here we're illustrating how to use code-based
   * validation as an alternative to declarative business rules like
   * the "VerifyStateForCountryRule" that is also associated to this
   * "Orders" business object. We throw an attribute validation exception
   * so that this error is attributed to a specific attribute instead of
   * to the object as a whole. Both kinds of exceptions are possible to
   * throw. To throw an object-level exception, we would throw
   * ValidationException (or a custom subclass of it) instead.
   *
   * This method-based validation is "wired up" using the generic, declarative
   * Method Validator rule at the entity level. The expected method signature
   * of validation methods invokeable by the Method Validator rule is:
   *
   *   public boolean validateXXXXX()
   *
   * so we should return true if the validation succeeds. For the failure case,
   * we can throw a custom exception (subclass of ValidationException) or
   * else just return false if the framework's generic exception is ok. Here
   * we are throwing a custom exception.
   */
  public boolean validateCreditCardExpiration() {
    if (getCreditcard() != null) {
      ExpirationDate expDate = getExprdate();
      if ((expDate != null) && !expDate.isFutureDate()) {
        throw new AttrValException(OrdersImplMsgBundle.class,
          OrdersImplMsgBundle.EXPIRED_CREDITCARD,
          getDefinitionObject().getFullName(),
          getDefinitionObject().getAttributeDef(EXPRDATE).getName(), null, null);
      }
    }
    return true;
  }

  private static final String ATTR_GROUP_COUNTRYSTATE = "CountryState";
  private static final int[] ATTR_GROUP_COUNTRYSTATE_ATTRS = new int[] {
      SHIPCOUNTRY, SHIPSTATE
    };

  public void setAttributeGroupValid(String name) {
    if (ATTR_GROUP_COUNTRYSTATE.equals(name)) {
      populateAttributeAsChanged(COUNTRYSTATEVALID, Boolean.TRUE);
    }
  }
  public boolean isAttributeGroupValid(String name) {
    if ("CountryState".equals(name)) {
      return !isAnyAttributeChanged(ATTR_GROUP_COUNTRYSTATE_ATTRS) ||
      Boolean.TRUE.equals(getCountryStateValid());
    }
    return true;
  }
  protected void setAttributeInternal(int index, Object val) {
    super.setAttributeInternal(index, val);
    if ((index == SHIPCOUNTRY) || (index == SHIPSTATE)) {
      populateAttributeAsChanged(COUNTRYSTATEVALID, Boolean.FALSE);
    }
  }
  //--[End Custom Code]--
  /**
   * Gets the attribute value for Orderid, using the alias name Orderid
   */
  public DBSequence getOrderid() {
    return (DBSequence)getAttributeInternal(ORDERID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Orderid
   */
  public void setOrderid(DBSequence value) {
    setAttributeInternal(ORDERID, value);
  }
  /**
   * Gets the attribute value for Userid, using the alias name Userid
   */
  public String getUserid() {
    return (String) getAttributeInternal(USERID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Userid
   */
  public void setUserid(String value) {
    setAttributeInternal(USERID, value);
  }
  /**
   * Gets the attribute value for Orderdate, using the alias name Orderdate
   */
  public Date getOrderdate() {
    return (Date) getAttributeInternal(ORDERDATE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Orderdate
   */
  public void setOrderdate(Date value) {
    setAttributeInternal(ORDERDATE, value);
  }
  /**
   * Gets the attribute value for Shipaddr1, using the alias name Shipaddr1
   */
  public String getShipaddr1() {
    return (String) getAttributeInternal(SHIPADDR1);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipaddr1
   */
  public void setShipaddr1(String value) {
    setAttributeInternal(SHIPADDR1, value);
    // For simplicity, set billing address to same as shipping address
    setBilladdr1(getShipaddr1());
  }
  /**
   * Gets the attribute value for Shipaddr2, using the alias name Shipaddr2
   */
  public String getShipaddr2() {
    return (String) getAttributeInternal(SHIPADDR2);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipaddr2
   */
  public void setShipaddr2(String value) {
    setAttributeInternal(SHIPADDR2, value);
  }
  /**
   * Gets the attribute value for Shipcity, using the alias name Shipcity
   */
  public String getShipcity() {
    return (String) getAttributeInternal(SHIPCITY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipcity
   */
  public void setShipcity(String value) {
    setAttributeInternal(SHIPCITY, value);
    // For simplicity, set billing city to same as shipping city
    setBillcity(getShipcity());
  }
  /**
   * Gets the attribute value for Shipstate, using the alias name Shipstate
   */
  public String getShipstate() {
    return (String) getAttributeInternal(SHIPSTATE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipstate
   */
  public void setShipstate(String value) {
    setAttributeInternal(SHIPSTATE, value);
    // For simplicity, set billing state to same as shipping state
    setBillstate(getShipstate());
  }
  /**
   * Gets the attribute value for Shipzip, using the alias name Shipzip
   */
  public String getShipzip() {
    return (String) getAttributeInternal(SHIPZIP);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipzip
   */
  public void setShipzip(String value) {
    setAttributeInternal(SHIPZIP, value);
    // For simplicity, set billing zip to same as shipping zip
    setBillzip(getShipzip());
  }
  /**
   * Gets the attribute value for Shipcountry, using the alias name Shipcountry
   */
  public String getShipcountry() {
    return (String) getAttributeInternal(SHIPCOUNTRY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shipcountry
   */
  public void setShipcountry(String value) {
    setAttributeInternal(SHIPCOUNTRY, value);
    // For simplicity, set billing country to same as shipping country
    setBillcountry(getShipcountry());
  }
  /**
   * Gets the attribute value for Billaddr1, using the alias name Billaddr1
   */
  public String getBilladdr1() {
    return (String) getAttributeInternal(BILLADDR1);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billaddr1
   */
  public void setBilladdr1(String value) {
    setAttributeInternal(BILLADDR1, value);
  }
  /**
   * Gets the attribute value for Billaddr2, using the alias name Billaddr2
   */
  public String getBilladdr2() {
    return (String) getAttributeInternal(BILLADDR2);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billaddr2
   */
  public void setBilladdr2(String value) {
    setAttributeInternal(BILLADDR2, value);
  }
  /**
   * Gets the attribute value for Billcity, using the alias name Billcity
   */
  public String getBillcity() {
    return (String) getAttributeInternal(BILLCITY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billcity
   */
  public void setBillcity(String value) {
    setAttributeInternal(BILLCITY, value);
  }
  /**
   * Gets the attribute value for Billstate, using the alias name Billstate
   */
  public String getBillstate() {
    return (String) getAttributeInternal(BILLSTATE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billstate
   */
  public void setBillstate(String value) {
    setAttributeInternal(BILLSTATE, value);
  }
  /**
   * Gets the attribute value for Billzip, using the alias name Billzip
   */
  public String getBillzip() {
    return (String) getAttributeInternal(BILLZIP);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billzip
   */
  public void setBillzip(String value) {
    setAttributeInternal(BILLZIP, value);
  }
  /**
   * Gets the attribute value for Billcountry, using the alias name Billcountry
   */
  public String getBillcountry() {
    return (String) getAttributeInternal(BILLCOUNTRY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billcountry
   */
  public void setBillcountry(String value) {
    setAttributeInternal(BILLCOUNTRY, value);
  }
  /**
   * Gets the attribute value for Courier, using the alias name Courier
   */
  public String getCourier() {
    return (String) getAttributeInternal(COURIER);
  }
  /**
   * Sets <code>value</code> as the attribute value for Courier
   */
  public void setCourier(String value) {
    setAttributeInternal(COURIER, value);
  }
  /**
   * Gets the attribute value for Totalprice, using the alias name Totalprice
   */
  public Number getTotalprice() {
    return (Number) getAttributeInternal(TOTALPRICE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Totalprice
   */
  public void setTotalprice(Number value) {
    setAttributeInternal(TOTALPRICE, value);
  }
  /**
   * Gets the attribute value for Billtofirstname, using the alias name Billtofirstname
   */
  public String getBilltofirstname() {
    return (String) getAttributeInternal(BILLTOFIRSTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billtofirstname
   */
  public void setBilltofirstname(String value) {
    setAttributeInternal(BILLTOFIRSTNAME, value);
  }
  /**
   * Gets the attribute value for Billtolastname, using the alias name Billtolastname
   */
  public String getBilltolastname() {
    return (String) getAttributeInternal(BILLTOLASTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Billtolastname
   */
  public void setBilltolastname(String value) {
    setAttributeInternal(BILLTOLASTNAME, value);
  }
  /**
   * Gets the attribute value for Shiptofirstname, using the alias name Shiptofirstname
   */
  public String getShiptofirstname() {
    return (String) getAttributeInternal(SHIPTOFIRSTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shiptofirstname
   */
  public void setShiptofirstname(String value) {
    setAttributeInternal(SHIPTOFIRSTNAME, value);
    // For simplicity, set billing first name to same as shipping first name
    setBilltofirstname(getShiptofirstname());
  }
  /**
   * Gets the attribute value for Shiptolastname, using the alias name Shiptolastname
   */
  public String getShiptolastname() {
    return (String) getAttributeInternal(SHIPTOLASTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Shiptolastname
   */
  public void setShiptolastname(String value) {
    setAttributeInternal(SHIPTOLASTNAME, value);
    // For simplicity, set billing last name to same as shipping last name    
    setBilltolastname(getShiptolastname());
  }
  /**
   * Gets the attribute value for Creditcard, using the alias name Creditcard
   */
  public CreditCardNumber getCreditcard() {
    return (CreditCardNumber)getAttributeInternal(CREDITCARD);
  }
  /**
   * Sets <code>value</code> as the attribute value for Creditcard
   */
  public void setCreditcard(CreditCardNumber value) {
    setAttributeInternal(CREDITCARD, value);
  }
  /**
   * Gets the attribute value for Exprdate, using the alias name Exprdate
   */
  public ExpirationDate getExprdate() {
    return (ExpirationDate)getAttributeInternal(EXPRDATE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Exprdate
   */
  public void setExprdate(ExpirationDate value) {
    setAttributeInternal(EXPRDATE, value);
  }
  /**
   * Gets the attribute value for Cardtype, using the alias name Cardtype
   */
  public String getCardtype() {
    return (String) getAttributeInternal(CARDTYPE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Cardtype
   */
  public void setCardtype(String value) {
    setAttributeInternal(CARDTYPE, value);
  }
  /**
   * Gets the attribute value for Locale, using the alias name Locale
   */
  public String getLocale() {
    return (String) getAttributeInternal(LOCALE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Locale
   */
  public void setLocale(String value) {
    setAttributeInternal(LOCALE, value);
  }
  /**
   * Gets the associated entity AccountImpl
   */
  public AccountImpl getAccount() {
    return (AccountImpl) getAttributeInternal(ACCOUNT);
  }
  /**
   * Sets <code>value</code> as the associated entity AccountImpl
   */
  public void setAccount(AccountImpl value) {
    setAttributeInternal(ACCOUNT, value);
  }
  /**
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getLineitem() {
    return (RowIterator)getAttributeInternal(LINEITEM);
  }
  /**
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getOrderstatus() {
    return (RowIterator)getAttributeInternal(ORDERSTATUS);
  }
  protected void create(AttributeList nameValuePair) {
    super.create(nameValuePair);
    // Default elements of a new order from the account placing the order
    // Set the order date to the current date
    setOrderdate(new Date(Date.getCurrentDate()));
    // Get the account associated with this order
    AccountImpl acct = getAccount();

    // Default Ship-to info from Account
    setShiptofirstname(acct.getFirstname());
    setShiptolastname(acct.getLastname());
    setShipaddr1(acct.getAddr1());
    setShipcity(acct.getCity());
    setShipstate(acct.getState());
    setShipzip(acct.getZip());
    setShipcountry(acct.getCountry());
    setTotalprice(new Number(0));
    setLocale("US");
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case ORDERID :
      return getOrderid();
    case USERID :
      return getUserid();
    case ORDERDATE :
      return getOrderdate();
    case SHIPADDR1 :
      return getShipaddr1();
    case SHIPADDR2 :
      return getShipaddr2();
    case SHIPCITY :
      return getShipcity();
    case SHIPSTATE :
      return getShipstate();
    case SHIPZIP :
      return getShipzip();
    case SHIPCOUNTRY :
      return getShipcountry();
    case BILLADDR1 :
      return getBilladdr1();
    case BILLADDR2 :
      return getBilladdr2();
    case BILLCITY :
      return getBillcity();
    case BILLSTATE :
      return getBillstate();
    case BILLZIP :
      return getBillzip();
    case BILLCOUNTRY :
      return getBillcountry();
    case COURIER :
      return getCourier();
    case TOTALPRICE :
      return getTotalprice();
    case BILLTOFIRSTNAME :
      return getBilltofirstname();
    case BILLTOLASTNAME :
      return getBilltolastname();
    case SHIPTOFIRSTNAME :
      return getShiptofirstname();
    case SHIPTOLASTNAME :
      return getShiptolastname();
    case CREDITCARD :
      return getCreditcard();
    case EXPRDATE :
      return getExprdate();
    case CARDTYPE :
      return getCardtype();
    case LOCALE :
      return getLocale();
    case COUNTRYSTATEVALID :
      return getCountryStateValid();
    case LINEITEM :
      return getLineitem();
    case ORDERSTATUS :
      return getOrderstatus();
    case ACCOUNT :
      return getAccount();
    default :
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case ORDERID :
      setOrderid((DBSequence)value);
      return;
    case USERID :
      setUserid((String)value);
      return;
    case ORDERDATE :
      setOrderdate((Date)value);
      return;
    case SHIPADDR1 :
      setShipaddr1((String)value);
      return;
    case SHIPADDR2 :
      setShipaddr2((String)value);
      return;
    case SHIPCITY :
      setShipcity((String)value);
      return;
    case SHIPSTATE :
      setShipstate((String)value);
      return;
    case SHIPZIP :
      setShipzip((String)value);
      return;
    case SHIPCOUNTRY :
      setShipcountry((String)value);
      return;
    case BILLADDR1 :
      setBilladdr1((String)value);
      return;
    case BILLADDR2 :
      setBilladdr2((String)value);
      return;
    case BILLCITY :
      setBillcity((String)value);
      return;
    case BILLSTATE :
      setBillstate((String)value);
      return;
    case BILLZIP :
      setBillzip((String)value);
      return;
    case BILLCOUNTRY :
      setBillcountry((String)value);
      return;
    case COURIER :
      setCourier((String)value);
      return;
    case TOTALPRICE :
      setTotalprice((Number)value);
      return;
    case BILLTOFIRSTNAME :
      setBilltofirstname((String)value);
      return;
    case BILLTOLASTNAME :
      setBilltolastname((String)value);
      return;
    case SHIPTOFIRSTNAME :
      setShiptofirstname((String)value);
      return;
    case SHIPTOLASTNAME :
      setShiptolastname((String)value);
      return;
    case CREDITCARD :
      setCreditcard((CreditCardNumber)value);
      return;
    case EXPRDATE :
      setExprdate((ExpirationDate)value);
      return;
    case CARDTYPE :
      setCardtype((String)value);
      return;
    case LOCALE :
      setLocale((String)value);
      return;
    case COUNTRYSTATEVALID :
      setCountryStateValid((Boolean)value);
      return;
    default :
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
  /**
   *
   *  Gets the attribute value for CountryStateValid, using the alias name CountryStateValid
   */
  public Boolean getCountryStateValid() {
    return (Boolean) getAttributeInternal(COUNTRYSTATEVALID);
  }
  /**
   *
   *  Sets <code>value</code> as the attribute value for CountryStateValid
   */
  public void setCountryStateValid(Boolean value) {
    setAttributeInternal(COUNTRYSTATEVALID, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(DBSequence orderid) {
    return new Key(new Object[]{orderid});
  }
}
