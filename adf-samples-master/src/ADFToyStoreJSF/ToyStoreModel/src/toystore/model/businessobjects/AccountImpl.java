/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/businessobjects/AccountImpl.java,v 1.1.1.1 2006/01/26 21:47:20 steve Exp $
package toystore.model.businessobjects;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import toystore.fwk.model.businessobjects.HasAttributeGroups;
import toystore.fwk.model.businessobjects.ToyStoreEntityImpl;
import toystore.model.datatypes.common.Email;
public class AccountImpl extends ToyStoreEntityImpl implements HasAttributeGroups {
  public static final int USERID = 0;
  public static final int EMAIL = 1;
  public static final int FIRSTNAME = 2;
  public static final int LASTNAME = 3;
  public static final int STATUS = 4;
  public static final int ADDR1 = 5;
  public static final int CITY = 6;
  public static final int STATE = 7;
  public static final int ZIP = 8;
  public static final int COUNTRY = 9;
  public static final int PHONE = 10;
  public static final int COUNTRYSTATEVALID = 11;
  public static final int SIGNON = 12;
  public static final int ORDERS = 13;
  public static final int PROFILE = 14;


  private static EntityDefImpl mDefinitionObject;
  /**
   * This is the default constructor (do not remove)
   */
  public AccountImpl() {
  }
  //--[Begin Custom Code]--
  private static final String ATTR_GROUP_COUNTRYSTATE = "CountryState";
  private static final int[] ATTR_GROUP_COUNTRYSTATE_ATTRS = new int[]{COUNTRY,STATE};
  public void setAttributeGroupValid(String name) 
  {
    if (ATTR_GROUP_COUNTRYSTATE.equals(name)) {
      populateAttributeAsChanged(COUNTRYSTATEVALID,Boolean.TRUE);
    }
  }
  public boolean isAttributeGroupValid(String name) 
  {
    if (ATTR_GROUP_COUNTRYSTATE.equals(name)) {
      return !isAnyAttributeChanged(ATTR_GROUP_COUNTRYSTATE_ATTRS) ||
              Boolean.TRUE.equals(getCountryStateValid());
    }
    return true;
  }
  protected void setAttributeInternal(int index, Object val)
  {
    super.setAttributeInternal(index, val);
    if (index == COUNTRY || index == STATE) 
    {
      populateAttributeAsChanged(COUNTRYSTATEVALID,Boolean.FALSE);
    }
  }  
  //--[End Custom Code]--

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("toystore.model.businessobjects.Account");
    }
    return mDefinitionObject;
  }


  /**
   * Gets the attribute value for Userid, using the alias name Userid
   */
  public String getUserid() {
    return (String) getAttributeInternal(USERID);
  }
  /**
   * Sets <code>value</code> as the attribute value for Userid
   */
  public void setUserid(String value) {
    setAttributeInternal(USERID, value);
  }
  /**
   * Gets the attribute value for Email, using the alias name Email
   */
  public Email getEmail() {
    return (Email)getAttributeInternal(EMAIL);
  }
  /**
   * Sets <code>value</code> as the attribute value for Email
   */
  public void setEmail(Email value) {
    setAttributeInternal(EMAIL, value);
  }
  /**
   * Gets the attribute value for Firstname, using the alias name Firstname
   */
  public String getFirstname() {
    return (String) getAttributeInternal(FIRSTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Firstname
   */
  public void setFirstname(String value) {
    setAttributeInternal(FIRSTNAME, value);
  }
  /**
   * Gets the attribute value for Lastname, using the alias name Lastname
   */
  public String getLastname() {
    return (String) getAttributeInternal(LASTNAME);
  }
  /**
   * Sets <code>value</code> as the attribute value for Lastname
   */
  public void setLastname(String value) {
    setAttributeInternal(LASTNAME, value);
  }
  /**
   * Gets the attribute value for Status, using the alias name Status
   */
  public String getStatus() {
    return (String) getAttributeInternal(STATUS);
  }
  /**
   * Sets <code>value</code> as the attribute value for Status
   */
  public void setStatus(String value) {
    setAttributeInternal(STATUS, value);
  }
  /**
   * Gets the attribute value for Addr1, using the alias name Addr1
   */
  public String getAddr1() {
    return (String) getAttributeInternal(ADDR1);
  }
  /**
   * Sets <code>value</code> as the attribute value for Addr1
   */
  public void setAddr1(String value) {
    setAttributeInternal(ADDR1, value);
  }
  /**
   * Gets the attribute value for City, using the alias name City
   */
  public String getCity() {
    return (String) getAttributeInternal(CITY);
  }
  /**
   * Sets <code>value</code> as the attribute value for City
   */
  public void setCity(String value) {
    setAttributeInternal(CITY, value);
  }
  /**
   * Gets the attribute value for State, using the alias name State
   */
  public String getState() {
    return (String) getAttributeInternal(STATE);
  }
  /**
   * Sets <code>value</code> as the attribute value for State
   */
  public void setState(String value) {
    setAttributeInternal(STATE, value);
  }
  /**
   * Gets the attribute value for Zip, using the alias name Zip
   */
  public String getZip() {
    return (String) getAttributeInternal(ZIP);
  }
  /**
   * Sets <code>value</code> as the attribute value for Zip
   */
  public void setZip(String value) {
    setAttributeInternal(ZIP, value);
  }
  /**
   * Gets the attribute value for Country, using the alias name Country
   */
  public String getCountry() {
    return (String) getAttributeInternal(COUNTRY);
  }
  /**
   * Sets <code>value</code> as the attribute value for Country
   */
  public void setCountry(String value) {
    setAttributeInternal(COUNTRY, value);
  }
  /**
   * Gets the attribute value for Phone, using the alias name Phone
   */
  public String getPhone() {
    return (String) getAttributeInternal(PHONE);
  }
  /**
   * Sets <code>value</code> as the attribute value for Phone
   */
  public void setPhone(String value) {
    setAttributeInternal(PHONE, value);
  }
  /**
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getOrders() {
    return (RowIterator)getAttributeInternal(ORDERS);
  }
  /**
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getProfile() {
    return (RowIterator)getAttributeInternal(PROFILE);
  }
  /**
   * Gets the associated entity SignonImpl
   */
  public SignonImpl getSignon() {
    return (SignonImpl) getAttributeInternal(SIGNON);
  }
  /**
   * Sets <code>value</code> as the associated entity SignonImpl
   */
  public void setSignon(SignonImpl value) {
    setAttributeInternal(SIGNON, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index)
      {
      case USERID:
        return getUserid();
      case EMAIL:
        return getEmail();
      case FIRSTNAME:
        return getFirstname();
      case LASTNAME:
        return getLastname();
      case STATUS:
        return getStatus();
      case ADDR1:
        return getAddr1();
      case CITY:
        return getCity();
      case STATE:
        return getState();
      case ZIP:
        return getZip();
      case COUNTRY:
        return getCountry();
      case PHONE:
        return getPhone();
      case COUNTRYSTATEVALID:
        return getCountryStateValid();
      case ORDERS:
        return getOrders();
      case PROFILE:
        return getProfile();
      case SIGNON:
        return getSignon();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case USERID:
        setUserid((String)value);
        return;
      case EMAIL:
        setEmail((Email)value);
        return;
      case FIRSTNAME:
        setFirstname((String)value);
        return;
      case LASTNAME:
        setLastname((String)value);
        return;
      case STATUS:
        setStatus((String)value);
        return;
      case ADDR1:
        setAddr1((String)value);
        return;
      case CITY:
        setCity((String)value);
        return;
      case STATE:
        setState((String)value);
        return;
      case ZIP:
        setZip((String)value);
        return;
      case COUNTRY:
        setCountry((String)value);
        return;
      case PHONE:
        setPhone((String)value);
        return;
      case COUNTRYSTATEVALID:
        setCountryStateValid((Boolean)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
  /**
   * Expose the create so that AccountsRowImpl can call it (from another package)
   */
  public void create(AttributeList attributeList) {
    super.create(attributeList);
  }


  /**
   * 
   *  Gets the attribute value for CountryStateValid, using the alias name CountryStateValid
   */
  public Boolean getCountryStateValid()
  {
    return (Boolean)getAttributeInternal(COUNTRYSTATEVALID);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for CountryStateValid
   */
  public void setCountryStateValid(Boolean value)
  {
    setAttributeInternal(COUNTRYSTATEVALID, value);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String userid)
  {
    return new Key(new Object[] {userid});
  }

}
