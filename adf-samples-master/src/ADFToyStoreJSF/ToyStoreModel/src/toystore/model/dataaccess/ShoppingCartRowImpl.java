/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/dataaccess/ShoppingCartRowImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.dataaccess;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
/**
 * This class contains no custom code, but is used by other methods
 * in the ShoppingCartImpl class and in the ToyStoreServiceImpl:finalizeOrder()
 * method, illustrating how generating a Java class for a view object row allows
 * early-bound, typesafe manipulation of your business object information using
 * methods like getExtendedTotal() and setQuantity() instead
 * of late-bound access using getAttribute("ExtendedTotal") and
 * setAttribute("Quantity") All code in this class is framework-generated.
 */
public class ShoppingCartRowImpl extends ViewRowImpl
  implements toystore.model.dataaccess.common.ShoppingCartRow {
  public static final int ITEMID = 0;
  public static final int QUANTITY = 1;
  public static final int LISTPRICE = 2;
  public static final int NAME = 3;
  public static final int EXTENDEDTOTAL = 4;
  public static final int INSTOCK = 5;

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ShoppingCartRowImpl() {
  }

  /**
   * Gets the attribute value for the calculated attribute Itemid
   */
  public String getItemid() {
    return (String) getAttributeInternal(ITEMID);
  }
  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute Itemid
   */
  public void setItemid(String value) {
    setAttributeInternal(ITEMID, value);
  }
  /**
   * Gets the attribute value for the calculated attribute Quantity
   */
  public Long getQuantity() {
    return (Long) getAttributeInternal(QUANTITY);
  }
  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute Quantity
   */
  public void setQuantity(Long value) {
    setAttributeInternal(QUANTITY, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index)
      {
      case ITEMID:
        return getItemid();
      case QUANTITY:
        return getQuantity();
      case LISTPRICE:
        return getListprice();
      case NAME:
        return getName();
      case EXTENDEDTOTAL:
        return getExtendedTotal();
      case INSTOCK:
        return getInStock();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case ITEMID:
        setItemid((String)value);
        return;
      case QUANTITY:
        setQuantity((Long)value);
        return;
      case LISTPRICE:
        setListprice((Number)value);
        return;
      case NAME:
        setName((String)value);
        return;
      case EXTENDEDTOTAL:
        setExtendedTotal((Double)value);
        return;
      case INSTOCK:
        setInStock((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
  /**
   *
   * Gets the attribute value for the calculated attribute Listprice
   */
  public Number getListprice() {
    return (Number) getAttributeInternal(LISTPRICE);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Listprice
   */
  public void setListprice(Number value) {
    setAttributeInternal(LISTPRICE, value);
  }
  /**
   *
   * Gets the attribute value for the calculated attribute Name
   */
  public String getName() {
    return (String) getAttributeInternal(NAME);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Name
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }
  /**
   *
   * Gets the attribute value for the calculated attribute ExtendedTotal
   */
  public Double getExtendedTotal() {
    Long qty = getQuantity();
    return new Double(
      qty != null ?
      qty.longValue() * getListprice().doubleValue()
      : 0);  
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute ExtendedTotal
   */
  public void setExtendedTotal(Double value) {
    setAttributeInternal(EXTENDEDTOTAL, value);
  }
  /**
   *
   * Gets the attribute value for the calculated attribute InStock
   */
  public String getInStock() {
    return (String) getAttributeInternal(INSTOCK);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute InStock
   */
  public void setInStock(String value) {
    setAttributeInternal(INSTOCK, value);
  }
}
