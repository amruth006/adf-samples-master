/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/dataaccess/ShoppingCartItemLookupRowImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.dataaccess;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
public class ShoppingCartItemLookupRowImpl extends ViewRowImpl {
  public static final int NAME = 0;
  public static final int LISTPRICE = 1;
  public static final int QUANTITYONHAND = 2;

  /**
   *
   * This is the default constructor (do not remove)
   */
  public ShoppingCartItemLookupRowImpl() {
  }

  /**
   *
   * Gets the attribute value for the calculated attribute Name
   */
  public String getName() {
    return (String) getAttributeInternal(NAME);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Name
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }
  /**
   *
   * Gets the attribute value for the calculated attribute Listprice
   */
  public Number getListprice() {
    return (Number) getAttributeInternal(LISTPRICE);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute Listprice
   */
  public void setListprice(Number value) {
    setAttributeInternal(LISTPRICE, value);
  }
  /**
   *
   * Gets the attribute value for the calculated attribute QuantityOnHand
   */
  public Number getQuantityOnHand() {
    return (Number) getAttributeInternal(QUANTITYONHAND);
  }
  /**
   *
   * Sets <code>value</code> as the attribute value for the calculated attribute QuantityOnHand
   */
  public void setQuantityOnHand(Number value) {
    setAttributeInternal(QUANTITYONHAND, value);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index) {
    case NAME:
      return getName();
    case LISTPRICE:
      return getListprice();
    case QUANTITYONHAND:
      return getQuantityOnHand();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case NAME:
      setName((String) value);
      return;
    case LISTPRICE:
      setListprice((Number) value);
      return;
    case QUANTITYONHAND:
      setQuantityOnHand((Number) value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
}
