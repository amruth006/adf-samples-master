/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/datatypes/common/Email.java,v 1.1.1.1 2006/01/26 21:47:22 steve Exp $
package toystore.model.datatypes.common;
import java.io.Serializable;
import oracle.jbo.Transaction;
import oracle.jbo.domain.DataCreationException;
import oracle.jbo.domain.DomainInterface;
import oracle.jbo.domain.DomainOwnerInterface;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
public class Email implements DomainInterface, Serializable {
  private String mData;

  protected Email() {
    mData = "";
  }
  public Email(String val) {
    mData = new String(val);
    validate();
  }

  public Object getData() {
    return mData;
  }
  /**
   *
   * <b>Internal:</b> <em>Applications should not use this method.</em>
   */
  public void setContext(DomainOwnerInterface owner, Transaction trans,
    Object obj) {
  }
  /**
   * Performs basic lexical validation on strings that represent email addresses
   */
  protected void validate() {
    int atpos = mData.indexOf('@');
    int dotpos = mData.lastIndexOf('.');
    int lastchar = mData.length() - 1;

    // Check for conditions that indicate an invalid email address
    if ((atpos == -1) || (dotpos == -1) || // there is no "@" or no "."
          (atpos == 0) || // string begins with "@"
          (mData.lastIndexOf('@') != atpos) || // string contains more than one "@"
          (mData.indexOf(' ') != -1) || // string contains a space
          (mData.indexOf(',') != -1) || // string contains a comma
          (dotpos < atpos) || // there is no "." after the "@"
          (dotpos == (atpos + 1)) || // "." immediately follows "@"
          (dotpos == lastchar)) // string ends with "."
     {
      throw new DataCreationException(ErrorMessages.class,
        ErrorMessages.INVALID_EMAIL, null, null);
    }
  }
  public String toString() {
    if (mData != null) {
      return mData.toString();
    }
    return "<null>";
  }
  public boolean equals(Object obj) {
    if (obj instanceof DomainInterface) {
      if (mData != null) {
        return mData.equals(((DomainInterface) obj).getData());
      }
      return ((DomainInterface) obj).getData() == null;
    }
    return false;
  }
}
