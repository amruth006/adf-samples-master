/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CountriesImpl extends EntityImpl {
  public static final int COUNTRYID = 0;
  public static final int COUNTRYNAME = 1;
  public static final int REGIONID = 2;
  public static final int REGIONS = 3;
  public static final int LOCATIONS = 4;
  public static final int CITIES = 5;
  private static EntityDefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
  public CountriesImpl() {
  }

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("test.model.Countries");
    }
    return mDefinitionObject;
  }

  /**Gets the attribute value for CountryId, using the alias name CountryId
   */
  public String getCountryId() {
    return (String)getAttributeInternal(COUNTRYID);
  }

  /**Sets <code>value</code> as the attribute value for CountryId
   */
  public void setCountryId(String value) {
    setAttributeInternal(COUNTRYID, value);
  }

  /**Gets the attribute value for CountryName, using the alias name CountryName
   */
  public String getCountryName() {
    return (String)getAttributeInternal(COUNTRYNAME);
  }

  /**Sets <code>value</code> as the attribute value for CountryName
   */
  public void setCountryName(String value) {
    setAttributeInternal(COUNTRYNAME, value);
  }

  /**Gets the attribute value for RegionId, using the alias name RegionId
   */
  public Number getRegionId() {
    return (Number)getAttributeInternal(REGIONID);
  }

  /**Sets <code>value</code> as the attribute value for RegionId
   */
  public void setRegionId(Number value) {
    setAttributeInternal(REGIONID, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, 
                                         AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case COUNTRYID:
      return getCountryId();
    case COUNTRYNAME:
      return getCountryName();
    case REGIONID:
      return getRegionId();
    case LOCATIONS:
      return getLocations();
    case CITIES:
      return getCities();
    case REGIONS:
      return getRegions();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, 
                                       AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case COUNTRYID:
      setCountryId((String)value);
      return;
    case COUNTRYNAME:
      setCountryName((String)value);
      return;
    case REGIONID:
      setRegionId((Number)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }

  /**Gets the associated entity RegionsImpl
   */
  public RegionsImpl getRegions() {
    return (RegionsImpl)getAttributeInternal(REGIONS);
  }

  /**Sets <code>value</code> as the associated entity RegionsImpl
   */
  public void setRegions(RegionsImpl value) {
    setAttributeInternal(REGIONS, value);
  }

  /**Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getLocations() {
    return (RowIterator)getAttributeInternal(LOCATIONS);
  }

  /**Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getCities() {
    return (RowIterator)getAttributeInternal(CITIES);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String countryId) {
    return new Key(new Object[]{countryId});
  }
}
