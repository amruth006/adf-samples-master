/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/datatypes/common/CreditCardNumber.java,v 1.1.1.1 2006/01/26 21:47:22 steve Exp $
package toystore.model.datatypes.common;
import java.io.Serializable;
import oracle.jbo.Transaction;
import oracle.jbo.domain.DataCreationException;
import oracle.jbo.domain.DomainInterface;
import oracle.jbo.domain.DomainOwnerInterface;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------
public class CreditCardNumber implements DomainInterface, Serializable {
  private String mData;

  protected CreditCardNumber() {
    mData = "";
  }
  public CreditCardNumber(String val) {
    mData = new String(val);
    validate();
  }

  public Object getData() {
    return mData;
  }
  /**
   *
   * <b>Internal:</b> <em>Applications should not use this method.</em>
   */
  public void setContext(DomainOwnerInterface owner, Transaction trans,
    Object obj) {
  }
  /**
   * Performs basic validation on strings that represent credit card numbers
   */
  protected void validate() {
    if (!isSixteenDigits()) {
      throw new DataCreationException(ErrorMessages.class,
        ErrorMessages.INVALID_CREDITCARD, null, null);
    }
  }
  private boolean isAllDigits() {
    for (int z = 0, max = mData.length(); z < max; z++) {
      if (!Character.isDigit(mData.charAt(z))) {
        return false;
      }
    }
    return true;
  }
  private boolean isSixteenDigits() {
    if (mData != null) {
      if (mData.length() != 16) {
        return false;
      } else {
        return isAllDigits();
      }
    }
    return false;
  }
  public String toString() {
    if (mData != null) {
      return mData.toString();
    }
    return "<null>";
  }
  public boolean equals(Object obj) {
    if (obj instanceof DomainInterface) {
      if (mData != null) {
        return mData.equals(((DomainInterface) obj).getData());
      }
      return ((DomainInterface) obj).getData() == null;
    }
    return false;
  }
}
