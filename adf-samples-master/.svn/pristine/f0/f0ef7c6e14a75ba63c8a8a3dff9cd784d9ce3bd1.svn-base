/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class EmpViewRowImpl extends ViewRowImpl 
{


  public static final int EMPNO = 0;
  public static final int ENAME = 1;
  public static final int HIREDATE = 2;
  public static final int SAL = 3;
  public static final int WORKSINDEPTNO = 4;
  public static final int DNAME = 5;
  public static final int DEPTNO = 6;
  public static final int LOC = 7;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public EmpViewRowImpl()
  {
  }

  /**
   * 
   * Gets Emp entity object.
   */
  public EmpImpl getEmp()
  {
    return (EmpImpl)getEntity(0);
  }

  /**
   * 
   * Gets Dept entity object.
   */
  public DeptImpl getDept()
  {
    return (DeptImpl)getEntity(1);
  }

  /**
   * 
   * Gets the attribute value for EMPNO using the alias name Empno
   */
  public Number getEmpno()
  {
    return (Number)getAttributeInternal(EMPNO);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMPNO using the alias name Empno
   */
  public void setEmpno(Number value)
  {
    setAttributeInternal(EMPNO, value);
  }

  /**
   * 
   * Gets the attribute value for ENAME using the alias name Ename
   */
  public String getEname()
  {
    return (String)getAttributeInternal(ENAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ENAME using the alias name Ename
   */
  public void setEname(String value)
  {
    setAttributeInternal(ENAME, value);
  }

  /**
   * 
   * Gets the attribute value for HIREDATE using the alias name Hiredate
   */
  public Date getHiredate()
  {
    return (Date)getAttributeInternal(HIREDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for HIREDATE using the alias name Hiredate
   */
  public void setHiredate(Date value)
  {
    setAttributeInternal(HIREDATE, value);
  }

  /**
   * 
   * Gets the attribute value for SAL using the alias name Sal
   */
  public Number getSal()
  {
    return (Number)getAttributeInternal(SAL);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SAL using the alias name Sal
   */
  public void setSal(Number value)
  {
    setAttributeInternal(SAL, value);
  }

  /**
   * 
   * Gets the attribute value for DEPTNO using the alias name WorksInDeptno
   */
  public Number getWorksInDeptno()
  {
    return (Number)getAttributeInternal(WORKSINDEPTNO);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DEPTNO using the alias name WorksInDeptno
   */
  public void setWorksInDeptno(Number value)
  {
    setAttributeInternal(WORKSINDEPTNO, value);
  }

  /**
   * 
   * Gets the attribute value for DNAME using the alias name Dname
   */
  public String getDname()
  {
    return (String)getAttributeInternal(DNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DNAME using the alias name Dname
   */
  public void setDname(String value)
  {
    setAttributeInternal(DNAME, value);
  }

  /**
   * 
   * Gets the attribute value for DEPTNO using the alias name Deptno
   */
  public Number getDeptno()
  {
    return (Number)getAttributeInternal(DEPTNO);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DEPTNO using the alias name Deptno
   */
  public void setDeptno(Number value)
  {
    setAttributeInternal(DEPTNO, value);
  }

  /**
   * 
   * Gets the attribute value for LOC using the alias name Loc
   */
  public String getLoc()
  {
    return (String)getAttributeInternal(LOC);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LOC using the alias name Loc
   */
  public void setLoc(String value)
  {
    setAttributeInternal(LOC, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case EMPNO:
        return getEmpno();
      case ENAME:
        return getEname();
      case HIREDATE:
        return getHiredate();
      case SAL:
        return getSal();
      case WORKSINDEPTNO:
        return getWorksInDeptno();
      case DNAME:
        return getDname();
      case DEPTNO:
        return getDeptno();
      case LOC:
        return getLoc();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case EMPNO:
        setEmpno((Number)value);
        return;
      case ENAME:
        setEname((String)value);
        return;
      case HIREDATE:
        setHiredate((Date)value);
        return;
      case SAL:
        setSal((Number)value);
        return;
      case WORKSINDEPTNO:
        setWorksInDeptno((Number)value);
        return;
      case DNAME:
        setDname((String)value);
        return;
      case DEPTNO:
        setDeptno((Number)value);
        return;
      case LOC:
        setLoc((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  public boolean isAttributeUpdateable(int index)
  {
    if (index == DNAME) return true;
    return super.isAttributeUpdateable(index);
  }
}
