/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import oracle.jbo.domain.Array;
import oracle.jbo.server.ViewObjectImpl;

import oracle.sql.ArrayDescriptor;

import test.common.EmpViewWithNamedBindingStyle;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpViewWithNamedBindingStyleImpl extends ViewObjectImpl implements EmpViewWithNamedBindingStyle {
  /**This is the default constructor (do not remove)
   */
  public EmpViewWithNamedBindingStyleImpl() {
  }

  /**Gets the bind variable value for EnameArray
   */
  public Array getEnameArray() {
    return (Array)getNamedWhereClauseParam("EnameArray");
  }

  private ArrayDescriptor descriptor;
  
  /**Sets <code>value</code> for bind variable EnameArray
   */
  public void setEnameArray(Array value) {
    setNamedWhereClauseParam("EnameArray", value);
  }
  public void setNamesToFind(String[] names) {
    Array arr = null;
    try {
      Connection conn = getCurrentConnection();
      if (descriptor == null) {
        setupDescriptor(conn);
      }
      arr = new Array(descriptor,conn,names);
    }
    catch (SQLException s) {
      s.printStackTrace();
    }
    if (arr != null)  setEnameArray(arr);
  }
  private synchronized void setupDescriptor(Connection conn) throws SQLException {
    descriptor = new ArrayDescriptor("TABLE_OF_VARCHAR",conn);
  }
  private Connection getCurrentConnection() throws SQLException {
    PreparedStatement st = getDBTransaction().createPreparedStatement("commit",1);
    Connection conn = st.getConnection();
    st.close();
    return conn;
  }
  protected void create() {
    super.create();
    /**
     * Workaround for Bug# 5849504
     */
    setWhereClause("ename in (SELECT * FROM TABLE(CAST(:EnameArray AS TABLE_OF_VARCHAR)))");
  }
}
