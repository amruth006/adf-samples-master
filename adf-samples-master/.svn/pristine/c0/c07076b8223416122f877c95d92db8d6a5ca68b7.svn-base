/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.DBSequence;
import oracle.ord.im.OrdDocDomain;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.ord.im.OrdImageDomain;
import oracle.jbo.domain.Timestamp;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---------------------------------------------------------------------

public class UploadedFileImpl extends EntityImpl  {
  public static final int ID = 0;
  public static final int NAME = 1;
  public static final int FILECONTENTS = 2;
  public static final int CREATED = 3;
  public static final int MODIFIED = 4;
  public static final int ICON = 5;






  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public UploadedFileImpl() {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("test.model.UploadedFile");
    }
    return mDefinitionObject;
  }







  /**
   * 
   *  Gets the attribute value for Id, using the alias name Id
   */
  public DBSequence getId() {
    return (DBSequence)getAttributeInternal(ID);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Id
   */
  public void setId(DBSequence value) {
    setAttributeInternal(ID, value);
  }

  /**
   * 
   *  Gets the attribute value for FileContents, using the alias name FileContents
   */
  public OrdDocDomain getFileContents() {
    return (OrdDocDomain)getAttributeInternal(FILECONTENTS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for FileContents
   */
  public void setFileContents(OrdDocDomain value) {
    setAttributeInternal(FILECONTENTS, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case ID:
        return getId();
      case NAME:
        return getName();
      case FILECONTENTS:
        return getFileContents();
      case CREATED:
        return getCreated();
      case MODIFIED:
        return getModified();
      case ICON:
        return getIcon();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case ID:
        setId((DBSequence)value);
        return;
      case NAME:
        setName((String)value);
        return;
      case FILECONTENTS:
        setFileContents((OrdDocDomain)value);
        return;
      case ICON:
        setIcon((OrdImageDomain)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }



  /**
   * 
   *  Gets the attribute value for Name, using the alias name Name
   */
  public String getName() {
    return (String)getAttributeInternal(NAME);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Name
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }



  /**
   * 
   *  Gets the attribute value for Created, using the alias name Created
   */
  public Date getCreated() {
    return (Date)getAttributeInternal(CREATED);
  }

  /**
   * 
   *  Gets the attribute value for Modified, using the alias name Modified
   */
  public Timestamp getModified() {
    return (Timestamp)getAttributeInternal(MODIFIED);
  }



  /**
   * 
   *  Gets the attribute value for Icon, using the alias name Icon
   */
  public OrdImageDomain getIcon() {
    return (OrdImageDomain)getAttributeInternal(ICON);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Icon
   */
  public void setIcon(OrdImageDomain value) {
    setAttributeInternal(ICON, value);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(DBSequence id) {
    return new Key(new Object[] {id});
  }




}
