/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model.service;
import oracle.jbo.server.ViewObjectImpl;
import test.fwkext.model.CustomAppModuleImpl;
import test.model.data.NonDBBlockRowImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------
public class ExampleModuleImpl extends CustomAppModuleImpl implements test.model.service.common.ExampleModule {
  /**
   *
   *  This is the default constructor (do not remove)
   */
  public ExampleModuleImpl() {}

  /**
   *
   *  Sample main for debugging Business Components code using the tester.
   */
  public static void main(String[] args) {
    launchTester("test.model.service", "ExampleModuleLocal");
  }
  /**
   *
   *  Container's getter for NonDBBlock
   */
  public ViewObjectImpl getNonDBBlock() {
    return (ViewObjectImpl)findViewObject("NonDBBlock");
  }
  //----------------[ Begin User-Written Code ]------------------------------
  /**
   * This method is exposed to clients by my having included it in
   * the list of methods on the "Client Interface" panel of the
   * application module wizard.
   *
   * It uses the callStoredProcedure helper method that this
   * application module impl class inherits from the CustomAppModuleImpl
   * framework extension class. Future calls to other stored procedures
   * could reuse the same helper code.
   *
   * We've generated a view row Java class for NonDBBlock view object,
   * and also exposed the getters and setters to clients to
   *
   */
  public void registerBeginEndDateAndOtherValue() {
    NonDBBlockRowImpl r = (NonDBBlockRowImpl) getNonDBBlock().first();
    callStoredProcedure("exampleproc(:1,:2,:3);",
      new Object[] { r.getBeginDate(), r.getEndDate(), r.getAnotherValue() });
    getDBTransaction().commit();
  }
  /**
   * This method is exposed to clients by my having included it in
   * the list of methods on the "Client Interface" panel of the
   * application module wizard.
   *
   * It uses the callStoredFunction helper method that this
   * application module impl class inherits from the CustomAppModuleImpl
   * framework extension class. Future calls to other stored functions
   * could reuse the same helper code.
   *
   * We've generated a view row Java class for NonDBBlock view object,
   * and also exposed the getters and setters to clients to
   *
   */
  public void registerBeginEndDateAndOtherValueWithResult() {
    NonDBBlockRowImpl r = (NonDBBlockRowImpl) getNonDBBlock().first();
    Object val = callStoredFunction(NUMBER, "examplefunc(:1,:2,:3);",
        new Object[] { r.getBeginDate(), r.getEndDate(), r.getAnotherValue() });
    getDBTransaction().commit();
    if (val != null) {
      r.setResultString(val.toString());
    }
  }
  //----------------[ End User-Written Code ]------------------------------
}
