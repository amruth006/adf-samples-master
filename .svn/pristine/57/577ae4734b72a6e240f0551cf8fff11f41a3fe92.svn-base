/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model.entities;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ExpertiseAreaImpl extends EntityImpl {
  public static final int PRODID = 0;
  public static final int USERID = 1;
  public static final int EXPERTISELEVEL = 2;
  public static final int NOTES = 3;
  public static final int PRODUCT = 4;
  public static final int USER = 5;
  private static EntityDefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
  public ExpertiseAreaImpl() {
  }

  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("test.model.entities.ExpertiseArea");
    }
    return mDefinitionObject;
  }

  /**Gets the attribute value for ProdId, using the alias name ProdId
   */
  public Number getProdId() {
    return (Number)getAttributeInternal(PRODID);
  }

  /**Sets <code>value</code> as the attribute value for ProdId
   */
  public void setProdId(Number value) {
    setAttributeInternal(PRODID, value);
  }

  /**Gets the attribute value for UserId, using the alias name UserId
   */
  public Number getUserId() {
    return (Number)getAttributeInternal(USERID);
  }

  /**Sets <code>value</code> as the attribute value for UserId
   */
  public void setUserId(Number value) {
    setAttributeInternal(USERID, value);
  }

  /**Gets the attribute value for ExpertiseLevel, using the alias name ExpertiseLevel
   */
  public String getExpertiseLevel() {
    return (String)getAttributeInternal(EXPERTISELEVEL);
  }

  /**Sets <code>value</code> as the attribute value for ExpertiseLevel
   */
  public void setExpertiseLevel(String value) {
    setAttributeInternal(EXPERTISELEVEL, value);
  }

  /**Gets the attribute value for Notes, using the alias name Notes
   */
  public String getNotes() {
    return (String)getAttributeInternal(NOTES);
  }

  /**Sets <code>value</code> as the attribute value for Notes
   */
  public void setNotes(String value) {
    setAttributeInternal(NOTES, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, 
                                         AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case PRODID:
      return getProdId();
    case USERID:
      return getUserId();
    case EXPERTISELEVEL:
      return getExpertiseLevel();
    case NOTES:
      return getNotes();
    case PRODUCT:
      return getProduct();
    case USER:
      return getUser();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, 
                                       AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case PRODID:
      setProdId((Number)value);
      return;
    case USERID:
      setUserId((Number)value);
      return;
    case EXPERTISELEVEL:
      setExpertiseLevel((String)value);
      return;
    case NOTES:
      setNotes((String)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }

  /**Gets the associated entity ProductImpl
   */
  public ProductImpl getProduct() {
    return (ProductImpl)getAttributeInternal(PRODUCT);
  }

  /**Sets <code>value</code> as the associated entity ProductImpl
   */
  public void setProduct(ProductImpl value) {
    setAttributeInternal(PRODUCT, value);
  }

  /**Gets the associated entity UserImpl
   */
  public UserImpl getUser() {
    return (UserImpl)getAttributeInternal(USER);
  }

  /**Sets <code>value</code> as the associated entity UserImpl
   */
  public void setUser(UserImpl value) {
    setAttributeInternal(USER, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number prodId, Number userId) {
    return new Key(new Object[]{prodId, userId});
  }
}
