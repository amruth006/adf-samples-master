package demo.model.queries;
import demo.model.entities.EmployeeImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeesInDepartmentRowImpl extends ViewRowImpl {
  public static final int EMPLOYEEID = 0;
  public static final int FIRSTNAME = 1;
  public static final int LASTNAME = 2;
  public static final int DEPARTMENTID = 3;
  public static final int FULLNAME = 4;

  /**This is the default constructor (do not remove)
   */
  public EmployeesInDepartmentRowImpl() {
  }

  /**Gets Employee entity object.
   */
  public EmployeeImpl getEmployee() {
    return (EmployeeImpl)getEntity(0);
  }

  /**Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId
   */
  public Number getEmployeeId() {
    return (Number) getAttributeInternal(EMPLOYEEID);
  }

  /**Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId
   */
  public void setEmployeeId(Number value) {
    setAttributeInternal(EMPLOYEEID, value);
  }

  /**Gets the attribute value for FIRST_NAME using the alias name FirstName
   */
  public String getFirstName() {
    return (String) getAttributeInternal(FIRSTNAME);
  }

  /**Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName
   */
  public void setFirstName(String value) {
    setAttributeInternal(FIRSTNAME, value);
  }

  /**Gets the attribute value for LAST_NAME using the alias name LastName
   */
  public String getLastName() {
    return (String) getAttributeInternal(LASTNAME);
  }

  /**Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName
   */
  public void setLastName(String value) {
    setAttributeInternal(LASTNAME, value);
  }

  /**Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId
   */
  public Number getDepartmentId() {
    return (Number) getAttributeInternal(DEPARTMENTID);
  }

  /**Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId
   */
  public void setDepartmentId(Number value) {
    setAttributeInternal(DEPARTMENTID, value);
  }

  /**Gets the attribute value for the calculated attribute FullName
   */
  public String getFullName() {
    return (String) getAttributeInternal(FULLNAME);
  }

  /**Sets <code>value</code> as the attribute value for the calculated attribute FullName
   */
  public void setFullName(String value) {
    setAttributeInternal(FULLNAME, value);
  }

  /**getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, 
                                         AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case EMPLOYEEID:
      return getEmployeeId();
    case FIRSTNAME:
      return getFirstName();
    case LASTNAME:
      return getLastName();
    case DEPARTMENTID:
      return getDepartmentId();
    case FULLNAME:
      return getFullName();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

  /**setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, 
                                       AttributeDefImpl attrDef) throws Exception {
    switch (index) {
    case EMPLOYEEID:
      setEmployeeId((Number)value);
      return;
    case FIRSTNAME:
      setFirstName((String)value);
      return;
    case LASTNAME:
      setLastName((String)value);
      return;
    case DEPARTMENTID:
      setDepartmentId((Number)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }
}
