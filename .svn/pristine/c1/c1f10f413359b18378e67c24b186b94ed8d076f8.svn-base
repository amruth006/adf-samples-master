/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// $Header: /cvs/ADFToyStoreJSF/ToyStoreModel/src/toystore/model/dataaccess/AccountsRowImpl.java,v 1.1.1.1 2006/01/26 21:47:21 steve Exp $
package toystore.model.dataaccess;
// ---------------------------------------------------------------
// ---    File generated by Oracle Business Components for Java.
// ---------------------------------------------------------------
import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;

import toystore.model.businessobjects.AccountImpl;
import toystore.model.businessobjects.SignonImpl;
import toystore.model.datatypes.common.Email;
import oracle.jbo.server.ViewRowImpl;
public class AccountsRowImpl extends ViewRowImpl {
  public static final int USERNAME = 0;
  public static final int PASSWORD = 1;
  public static final int EMAIL = 2;
  public static final int FIRSTNAME = 3;
  public static final int LASTNAME = 4;
  public static final int STATUS = 5;
  public static final int ADDRESS = 6;
  public static final int CITY = 7;
  public static final int STATE = 8;
  public static final int ZIP = 9;
  public static final int COUNTRY = 10;
  public static final int PHONE = 11;
  public static final int USERID = 12;
  public static final int ORDERS = 13;

  /**
   * This is the default constructor (do not remove)
   */
  public AccountsRowImpl() {
  }

  //--[Begin Custom Code]--
  /**
   * Set both the username and the userid whenever the username is set
   */
  public void setUsername(String value) {
    setAttributeInternal(USERNAME, value);
    setAttributeInternal(USERID, value);
  }
  /**
   * Ignore any attempts to set userid since username will always get set too
   */
  public void setUserid(String value) {
    // Ignore this attribute set. Value of Userid will Stay Synched with set of Username
    // setAttributeInternal(USERID, value);
  }
  /**
   * We override this default view object row creation to explicitly
   * pass the containing parent SignonImpl into the create method
   * of the contained child AccountImpl.
   */
  protected void create(AttributeList attributeList) {
    // The BC4J framework will already have created "blank" entity instances
    SignonImpl newSignon = getSignon();
    AccountImpl newAccount = getAccount();
    try {
      // Let department "blank" entity instance to do programmatic defaulting
      newSignon.create(attributeList);
      // Let employee "blank" entity instance to do programmatic defaulting
      // passing in new DepartmentImpl instance so its attributes are 
      // available to the EmployeeImpl's create method.
      newAccount.create(newSignon);
    } catch (JboException ex) {
      newSignon.revert();
      newAccount.revert();
      throw ex;
    }
  }
  //--[End Custom Code]--

  /**
   * Gets Account entity object.
   */
  public AccountImpl getAccount() {
    return (AccountImpl)getEntity(0);
  }
  /**
   * Gets the associated <code>RowIterator</code> using master-detail link Orders1
   */
  public oracle.jbo.RowIterator getOrders1() {
    return (oracle.jbo.RowIterator) getAttributeInternal("Orders1");
  }
  /**
   *
   * Gets the associated <code>RowIterator</code> using master-detail link Orders
   */
  public RowIterator getOrders() {
    return (RowIterator) getAttributeInternal(ORDERS);
  }
  /**
   *
   * Gets Signon entity object.
   */
  public SignonImpl getSignon() {
    return (SignonImpl)getEntity(1);
  }
  /**
   *
   * Gets the attribute value for USERNAME using the alias name Username
   */
  public String getUsername() {
    return (String) getAttributeInternal(USERNAME);
  }
  /**
   *
   * Gets the attribute value for PASSWORD using the alias name Password
   */
  public String getPassword() {
    return (String) getAttributeInternal(PASSWORD);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password
   */
  public void setPassword(String value) {
    setAttributeInternal(PASSWORD, value);
  }
  /**
   *
   * Gets the attribute value for EMAIL using the alias name Email
   */
  public Email getEmail() {
    return (Email)getAttributeInternal(EMAIL);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for EMAIL using the alias name Email
   */
  public void setEmail(Email value) {
    setAttributeInternal(EMAIL, value);
  }
  /**
   *
   * Gets the attribute value for FIRSTNAME using the alias name Firstname
   */
  public String getFirstname() {
    return (String) getAttributeInternal(FIRSTNAME);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for FIRSTNAME using the alias name Firstname
   */
  public void setFirstname(String value) {
    setAttributeInternal(FIRSTNAME, value);
  }
  /**
   *
   * Gets the attribute value for LASTNAME using the alias name Lastname
   */
  public String getLastname() {
    return (String) getAttributeInternal(LASTNAME);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for LASTNAME using the alias name Lastname
   */
  public void setLastname(String value) {
    setAttributeInternal(LASTNAME, value);
  }
  /**
   *
   * Gets the attribute value for STATUS using the alias name Status
   */
  public String getStatus() {
    return (String) getAttributeInternal(STATUS);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for STATUS using the alias name Status
   */
  public void setStatus(String value) {
    setAttributeInternal(STATUS, value);
  }
  /**
   *
   * Gets the attribute value for ADDR1 using the alias name Address
   */
  public String getAddress() {
    return (String) getAttributeInternal(ADDRESS);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for ADDR1 using the alias name Address
   */
  public void setAddress(String value) {
    setAttributeInternal(ADDRESS, value);
  }
  /**
   *
   * Gets the attribute value for CITY using the alias name City
   */
  public String getCity() {
    return (String) getAttributeInternal(CITY);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for CITY using the alias name City
   */
  public void setCity(String value) {
    setAttributeInternal(CITY, value);
  }
  /**
   *
   * Gets the attribute value for STATE using the alias name State
   */
  public String getState() {
    return (String) getAttributeInternal(STATE);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for STATE using the alias name State
   */
  public void setState(String value) {
    setAttributeInternal(STATE, value);
  }
  /**
   *
   * Gets the attribute value for ZIP using the alias name Zip
   */
  public String getZip() {
    return (String) getAttributeInternal(ZIP);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for ZIP using the alias name Zip
   */
  public void setZip(String value) {
    setAttributeInternal(ZIP, value);
  }
  /**
   *
   * Gets the attribute value for COUNTRY using the alias name Country
   */
  public String getCountry() {
    return (String) getAttributeInternal(COUNTRY);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for COUNTRY using the alias name Country
   */
  public void setCountry(String value) {
    setAttributeInternal(COUNTRY, value);
  }
  /**
   *
   * Gets the attribute value for PHONE using the alias name Phone
   */
  public String getPhone() {
    return (String) getAttributeInternal(PHONE);
  }
  /**
   *
   * Sets <code>value</code> as attribute value for PHONE using the alias name Phone
   */
  public void setPhone(String value) {
    setAttributeInternal(PHONE, value);
  }
  /**
   *
   * Gets the attribute value for USERID using the alias name Userid
   */
  public String getUserid() {
    return (String) getAttributeInternal(USERID);
  }
  //  Generated method. Do not modify.
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef)
    throws Exception {
    switch (index)
      {
      case USERNAME:
        return getUsername();
      case PASSWORD:
        return getPassword();
      case EMAIL:
        return getEmail();
      case FIRSTNAME:
        return getFirstname();
      case LASTNAME:
        return getLastname();
      case STATUS:
        return getStatus();
      case ADDRESS:
        return getAddress();
      case CITY:
        return getCity();
      case STATE:
        return getState();
      case ZIP:
        return getZip();
      case COUNTRY:
        return getCountry();
      case PHONE:
        return getPhone();
      case USERID:
        return getUserid();
      case ORDERS:
        return getOrders();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.
  protected void setAttrInvokeAccessor(int index, Object value,
    AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case USERNAME:
        setUsername((String)value);
        return;
      case PASSWORD:
        setPassword((String)value);
        return;
      case EMAIL:
        setEmail((Email)value);
        return;
      case FIRSTNAME:
        setFirstname((String)value);
        return;
      case LASTNAME:
        setLastname((String)value);
        return;
      case STATUS:
        setStatus((String)value);
        return;
      case ADDRESS:
        setAddress((String)value);
        return;
      case CITY:
        setCity((String)value);
        return;
      case STATE:
        setState((String)value);
        return;
      case ZIP:
        setZip((String)value);
        return;
      case COUNTRY:
        setCountry((String)value);
        return;
      case PHONE:
        setPhone((String)value);
        return;
      case USERID:
        setUserid((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}
