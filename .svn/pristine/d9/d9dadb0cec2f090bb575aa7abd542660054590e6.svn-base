/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.hr;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Date;
import java.sql.*;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class EmpViewRowImpl extends ViewRowImpl  {


  public static final int EMPNO = 0;
  public static final int ENAME = 1;
  public static final int JOB = 2;
  public static final int MGR = 3;
  public static final int HIREDATE = 4;
  public static final int SAL = 5;
  public static final int COMM = 6;
  public static final int WORKSINDEPTNO = 7;
  public static final int DNAME = 8;
  public static final int DEPTNO = 9;
  public static final int LOC = 10;
  public static final int MANAGERSSALARY = 11;
  public static final int MANAGERSEMPNO = 12;
  public static final int SALARYPERCENTAGEOFMANAGER = 13;
  public static final int EMPVIEW = 14;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public EmpViewRowImpl() {
  }

  /**
   * 
   * Gets Emp entity object.
   */
  public EmpImpl getEmp() {
    return (EmpImpl)getEntity(0);
  }

  /**
   * 
   * Gets Dept entity object.
   */
  public DeptImpl getDept() {
    return (DeptImpl)getEntity(1);
  }

  /**
   * 
   * Gets the attribute value for EMPNO using the alias name Empno
   */
  public Number getEmpno() {
    return (Number)getAttributeInternal(EMPNO);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for EMPNO using the alias name Empno
   */
  public void setEmpno(Number value) {
    setAttributeInternal(EMPNO, value);
  }

  /**
   * 
   * Gets the attribute value for ENAME using the alias name Ename
   */
  public String getEname() {
    return (String)getAttributeInternal(ENAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for ENAME using the alias name Ename
   */
  public void setEname(String value) {
    setAttributeInternal(ENAME, value);
  }

  /**
   * 
   * Gets the attribute value for JOB using the alias name Job
   */
  public String getJob() {
    return (String)getAttributeInternal(JOB);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for JOB using the alias name Job
   */
  public void setJob(String value) {
    setAttributeInternal(JOB, value);
  }

  /**
   * 
   * Gets the attribute value for MGR using the alias name Mgr
   */
  public Number getMgr() {
    return (Number)getAttributeInternal(MGR);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for MGR using the alias name Mgr
   */
  public void setMgr(Number value) {
    setAttributeInternal(MGR, value);
  }

  /**
   * 
   * Gets the attribute value for HIREDATE using the alias name Hiredate
   */
  public Date getHiredate() {
    return (Date)getAttributeInternal(HIREDATE);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for HIREDATE using the alias name Hiredate
   */
  public void setHiredate(Date value) {
    setAttributeInternal(HIREDATE, value);
  }

  /**
   * 
   * Gets the attribute value for SAL using the alias name Sal
   */
  public Number getSal() {
    return (Number)getAttributeInternal(SAL);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for SAL using the alias name Sal
   */
  public void setSal(Number value) {
    setAttributeInternal(SAL, value);
  }

  /**
   * 
   * Gets the attribute value for COMM using the alias name Comm
   */
  public Number getComm() {
    return (Number)getAttributeInternal(COMM);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for COMM using the alias name Comm
   */
  public void setComm(Number value) {
    setAttributeInternal(COMM, value);
  }

  /**
   * 
   * Gets the attribute value for DEPTNO using the alias name WorksInDeptno
   */
  public Number getWorksInDeptno() {
    return (Number)getAttributeInternal(WORKSINDEPTNO);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DEPTNO using the alias name WorksInDeptno
   */
  public void setWorksInDeptno(Number value) {
    setAttributeInternal(WORKSINDEPTNO, value);
  }

  /**
   * 
   * Gets the attribute value for DNAME using the alias name Dname
   */
  public String getDname() {
    return (String)getAttributeInternal(DNAME);
  }

  public void setDname(String value) {
  }

  /**
   * 
   * Gets the attribute value for DEPTNO using the alias name Deptno
   */
  public Number getDeptno() {
    return (Number)getAttributeInternal(DEPTNO);
  }

  public void setDeptno(Number value) {
  }

  /**
   * 
   * Gets the attribute value for LOC using the alias name Loc
   */
  public String getLoc() {
    return (String)getAttributeInternal(LOC);
  }

  public void setLoc(String value) {
  }

  /**
   * 
   * Gets the associated <code>RowIterator</code> using master-detail link EmpView
   */
  public oracle.jbo.RowIterator getEmpView() {
    return (oracle.jbo.RowIterator)getAttributeInternal(EMPVIEW);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case EMPNO:
        return getEmpno();
      case ENAME:
        return getEname();
      case JOB:
        return getJob();
      case MGR:
        return getMgr();
      case HIREDATE:
        return getHiredate();
      case SAL:
        return getSal();
      case COMM:
        return getComm();
      case WORKSINDEPTNO:
        return getWorksInDeptno();
      case DNAME:
        return getDname();
      case DEPTNO:
        return getDeptno();
      case LOC:
        return getLoc();
      case MANAGERSSALARY:
        return getManagersSalary();
      case MANAGERSEMPNO:
        return getManagersEmpno();
      case SALARYPERCENTAGEOFMANAGER:
        return getSalaryPercentageOfManager();
      case EMPVIEW:
        return getEmpView();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case EMPNO:
        setEmpno((Number)value);
        return;
      case ENAME:
        setEname((String)value);
        return;
      case JOB:
        setJob((String)value);
        return;
      case MGR:
        setMgr((Number)value);
        return;
      case HIREDATE:
        setHiredate((Date)value);
        return;
      case SAL:
        setSal((Number)value);
        return;
      case COMM:
        setComm((Number)value);
        return;
      case WORKSINDEPTNO:
        setWorksInDeptno((Number)value);
        return;
      case DNAME:
        setDname((String)value);
        return;
      case DEPTNO:
        setDeptno((Number)value);
        return;
      case LOC:
        setLoc((String)value);
        return;
      case MANAGERSSALARY:
        setManagersSalary((Number)value);
        return;
      case MANAGERSEMPNO:
        setManagersEmpno((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets Manager entity object.
   */
  public EmpImpl getManager()
  {
    return (EmpImpl)getEntity(2);
  }

  /**
   * 
   * Gets the attribute value for SAL using the alias name ManagersSalary
   */
  public Number getManagersSalary()
  {
    return (Number)getAttributeInternal(MANAGERSSALARY);
  }

  public void setManagersSalary(Number value)
  {
  }

  /**
   * 
   * Gets the attribute value for EMPNO using the alias name ManagersEmpno
   */
  public Number getManagersEmpno()
  {
    return (Number)getAttributeInternal(MANAGERSEMPNO);
  }

  public void setManagersEmpno(Number value)
  {
  }

  /**
   * 
   * Gets the attribute value for the calculated attribute SalaryPercentageOfManager
   */
  public Number getSalaryPercentageOfManager() {
    Number empSal = getSal();
    Number mgrSal = getManagersSalary();
    if (empSal == null || mgrSal == null) return null;
    double empSalFloat = empSal.doubleValue(); 
    double mgrSalFloat = mgrSal.doubleValue();
    try {
      Number ret = new Number( (double) (empSalFloat / mgrSalFloat));
      return ret;
    }
    catch (SQLException s) {
      return null;      
    }
    catch (Exception ex) {
      ex.printStackTrace();
      return null;
    }
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for the calculated attribute SalaryPercentageOfManager
   */
  public void setSalaryPercentageOfManager(Number value) {
    setAttributeInternal(SALARYPERCENTAGEOFMANAGER, value);
  }

  public boolean isAttributeUpdateable(int index) {
    Number commission = getComm();
    if (index == SAL && commission != null && commission.doubleValue() == 89) {
      return false;
    }
    else {
      return super.isAttributeUpdateable(index);      
    }
  }

  /**
   * 
   *  Sample exportable method.
   */
  public void sampleEmpViewRowImplExportable() {
  }

  /**
   * 
   *  Sample exportable method.
   */
  public void sampleEmpViewRowImplExportable2(String testParam1) {
  }
}
