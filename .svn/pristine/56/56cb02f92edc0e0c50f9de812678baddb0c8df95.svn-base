/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.0.0, build 060119.1546.05277)

package remoteservices.runtime;

import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.streaming.*;
import oracle.j2ee.ws.common.soap.message.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.exception.JAXRPCExceptionBase;
import oracle.j2ee.ws.common.util.SoapWithAttachmentsUtil;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import oracle.j2ee.ws.client.*;
import oracle.j2ee.ws.client.http.*;
import oracle.webservices.transport.*;
import oracle.webservices.*;
import oracle.webservices.attachments.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class DeptServiceSoapHttp_Stub
    extends oracle.j2ee.ws.client.StubBase
    implements remoteservices.DeptService_PortType {
    
    
    /*
     *  public constructor
     */
    public DeptServiceSoapHttp_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://localhost:8888/DepartmentServices/DeptServiceSoapHttpPort");
        setSoapVersion(SOAPVersion.SOAP_11);
        setServiceName( new QName("urn:DeptService-example","DeptService"));
        setPortName( new QName("urn:DeptService-example","DeptServiceSoapHttpPort"));
    }
    
    /*
     *  implementation of insertDepartment
     */
    public remoteservices.types.deptws.server.webservice.types.Department insertDepartment(remoteservices.types.deptws.server.webservice.types.Department department)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(insertDepartment_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","insertDepartment"));
            
            remoteservices.InsertDepartment _myInsertDepartment = new remoteservices.InsertDepartment();
            _myInsertDepartment.setDepartment(department);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_insertDepartment_insertDepartmentElement_QNAME);
            _bodyBlock.setValue(_myInsertDepartment);
            _bodyBlock.setSerializer(myns1_insertDepartment__InsertDepartment_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/insertDepartment");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.InsertDepartmentResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.InsertDepartmentResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.InsertDepartmentResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of retrieveDepartmentData
     */
    public remoteservices.types.deptws.server.webservice.types.Department[] retrieveDepartmentData(java.util.Map searchCriteria)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(retrieveDepartmentData_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","retrieveDepartmentData"));
            
            remoteservices.RetrieveDepartmentData _myRetrieveDepartmentData = new remoteservices.RetrieveDepartmentData();
            _myRetrieveDepartmentData.setSearchCriteria(searchCriteria);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_retrieveDepartmentData_retrieveDepartmentDataElement_QNAME);
            _bodyBlock.setValue(_myRetrieveDepartmentData);
            _bodyBlock.setSerializer(myns1_retrieveDepartmentData__RetrieveDepartmentData_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/retrieveDepartmentData");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.RetrieveDepartmentDataResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.RetrieveDepartmentDataResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.RetrieveDepartmentDataResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteDepartmentByDeptno
     */
    public void deleteDepartmentByDeptno(java.lang.Integer deptno)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deleteDepartmentByDeptno_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deleteDepartmentByDeptno"));
            
            remoteservices.DeleteDepartmentByDeptno _myDeleteDepartmentByDeptno = new remoteservices.DeleteDepartmentByDeptno();
            _myDeleteDepartmentByDeptno.setDeptno(deptno);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deleteDepartmentByDeptno_deleteDepartmentByDeptnoElement_QNAME);
            _bodyBlock.setValue(_myDeleteDepartmentByDeptno);
            _bodyBlock.setSerializer(myns1_deleteDepartmentByDeptno__DeleteDepartmentByDeptno_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/deleteDepartmentByDeptno");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of mergeDepartment
     */
    public remoteservices.types.deptws.server.webservice.types.Department mergeDepartment(remoteservices.types.deptws.server.webservice.types.Department department)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(mergeDepartment_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","mergeDepartment"));
            
            remoteservices.MergeDepartment _myMergeDepartment = new remoteservices.MergeDepartment();
            _myMergeDepartment.setDepartment(department);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_mergeDepartment_mergeDepartmentElement_QNAME);
            _bodyBlock.setValue(_myMergeDepartment);
            _bodyBlock.setSerializer(myns1_mergeDepartment__MergeDepartment_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/mergeDepartment");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.MergeDepartmentResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.MergeDepartmentResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.MergeDepartmentResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of findDepartmentByDeptno
     */
    public remoteservices.types.deptws.server.webservice.types.Department findDepartmentByDeptno(java.lang.Integer deptno)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(findDepartmentByDeptno_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","findDepartmentByDeptno"));
            
            remoteservices.FindDepartmentByDeptno _myFindDepartmentByDeptno = new remoteservices.FindDepartmentByDeptno();
            _myFindDepartmentByDeptno.setDeptno(deptno);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_findDepartmentByDeptno_findDepartmentByDeptnoElement_QNAME);
            _bodyBlock.setValue(_myFindDepartmentByDeptno);
            _bodyBlock.setSerializer(myns1_findDepartmentByDeptno__FindDepartmentByDeptno_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/findDepartmentByDeptno");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.FindDepartmentByDeptnoResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.FindDepartmentByDeptnoResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.FindDepartmentByDeptnoResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of updateDepartment
     */
    public remoteservices.types.deptws.server.webservice.types.Department updateDepartment(remoteservices.types.deptws.server.webservice.types.Department department)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(updateDepartment_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","updateDepartment"));
            
            remoteservices.UpdateDepartment _myUpdateDepartment = new remoteservices.UpdateDepartment();
            _myUpdateDepartment.setDepartment(department);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_updateDepartment_updateDepartmentElement_QNAME);
            _bodyBlock.setValue(_myUpdateDepartment);
            _bodyBlock.setSerializer(myns1_updateDepartment__UpdateDepartment_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/updateDepartment");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.UpdateDepartmentResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.UpdateDepartmentResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.UpdateDepartmentResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of estimateCount
     */
    public long estimateCount(java.util.Map searchCriteria)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(estimateCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","estimateCount"));
            
            remoteservices.EstimateCount _myEstimateCount = new remoteservices.EstimateCount();
            _myEstimateCount.setSearchCriteria(searchCriteria);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_estimateCount_estimateCountElement_QNAME);
            _bodyBlock.setValue(_myEstimateCount);
            _bodyBlock.setSerializer(myns1_estimateCount__EstimateCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "urn:DeptService-example/estimateCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            remoteservices.EstimateCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (remoteservices.EstimateCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (remoteservices.EstimateCountResponse)_responseObj;
            }
            
            return _result.getResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case insertDepartment_OPCODE:
                _deserialize_insertDepartment(bodyReader, deserializationContext, state);
                break;
            case retrieveDepartmentData_OPCODE:
                _deserialize_retrieveDepartmentData(bodyReader, deserializationContext, state);
                break;
            case deleteDepartmentByDeptno_OPCODE:
                _deserialize_deleteDepartmentByDeptno(bodyReader, deserializationContext, state);
                break;
            case mergeDepartment_OPCODE:
                _deserialize_mergeDepartment(bodyReader, deserializationContext, state);
                break;
            case findDepartmentByDeptno_OPCODE:
                _deserialize_findDepartmentByDeptno(bodyReader, deserializationContext, state);
                break;
            case updateDepartment_OPCODE:
                _deserialize_updateDepartment(bodyReader, deserializationContext, state);
                break;
            case estimateCount_OPCODE:
                _deserialize_estimateCount(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the insertDepartment operation.
     */
    private void _deserialize_insertDepartment(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myInsertDepartmentResponseObj =
                myns1_insertDepartmentResponse__InsertDepartmentResponse_LiteralSerializer.deserialize(ns1_insertDepartment_insertDepartmentResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_insertDepartment_insertDepartmentResponseElement_QNAME);
            bodyBlock.setValue(myInsertDepartmentResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the retrieveDepartmentData operation.
     */
    private void _deserialize_retrieveDepartmentData(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myRetrieveDepartmentDataResponseObj =
                myns1_retrieveDepartmentDataResponse__RetrieveDepartmentDataResponse_LiteralSerializer.deserialize(ns1_retrieveDepartmentData_retrieveDepartmentDataResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_retrieveDepartmentData_retrieveDepartmentDataResponseElement_QNAME);
            bodyBlock.setValue(myRetrieveDepartmentDataResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deleteDepartmentByDeptno operation.
     */
    private void _deserialize_deleteDepartmentByDeptno(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteDepartmentByDeptnoResponseObj =
                myns1_deleteDepartmentByDeptnoResponse__DeleteDepartmentByDeptnoResponse_LiteralSerializer.deserialize(ns1_deleteDepartmentByDeptno_deleteDepartmentByDeptnoResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deleteDepartmentByDeptno_deleteDepartmentByDeptnoResponseElement_QNAME);
            bodyBlock.setValue(myDeleteDepartmentByDeptnoResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the mergeDepartment operation.
     */
    private void _deserialize_mergeDepartment(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myMergeDepartmentResponseObj =
                myns1_mergeDepartmentResponse__MergeDepartmentResponse_LiteralSerializer.deserialize(ns1_mergeDepartment_mergeDepartmentResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_mergeDepartment_mergeDepartmentResponseElement_QNAME);
            bodyBlock.setValue(myMergeDepartmentResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the findDepartmentByDeptno operation.
     */
    private void _deserialize_findDepartmentByDeptno(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myFindDepartmentByDeptnoResponseObj =
                myns1_findDepartmentByDeptnoResponse__FindDepartmentByDeptnoResponse_LiteralSerializer.deserialize(ns1_findDepartmentByDeptno_findDepartmentByDeptnoResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findDepartmentByDeptno_findDepartmentByDeptnoResponseElement_QNAME);
            bodyBlock.setValue(myFindDepartmentByDeptnoResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the updateDepartment operation.
     */
    private void _deserialize_updateDepartment(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myUpdateDepartmentResponseObj =
                myns1_updateDepartmentResponse__UpdateDepartmentResponse_LiteralSerializer.deserialize(ns1_updateDepartment_updateDepartmentResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_updateDepartment_updateDepartmentResponseElement_QNAME);
            bodyBlock.setValue(myUpdateDepartmentResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the estimateCount operation.
     */
    private void _deserialize_estimateCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myEstimateCountResponseObj =
                myns1_estimateCountResponse__EstimateCountResponse_LiteralSerializer.deserialize(ns1_estimateCount_estimateCountResponseElement_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_estimateCount_estimateCountResponseElement_QNAME);
            bodyBlock.setValue(myEstimateCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    
    
    
    public String _getEncodingStyle() {
        return SOAPEncodingConstants.getSOAPEncodingConstants(soapVersion).getURIEncoding();
    }
    
    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    public ClientTransport getClientTransport() {
        return super._getTransport();
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    /*
     * This method handles the case of an empty SOAP body.
     */
    protected void _handleEmptyBody(XMLReader reader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        myns1_estimateCount__EstimateCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.EstimateCount.class, ns1_estimateCount_TYPE_QNAME);
        myns1_retrieveDepartmentData__RetrieveDepartmentData_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.RetrieveDepartmentData.class, ns1_retrieveDepartmentData_TYPE_QNAME);
        myns1_findDepartmentByDeptnoResponse__FindDepartmentByDeptnoResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.FindDepartmentByDeptnoResponse.class, ns1_findDepartmentByDeptnoResponse_TYPE_QNAME);
        myns1_deleteDepartmentByDeptnoResponse__DeleteDepartmentByDeptnoResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.DeleteDepartmentByDeptnoResponse.class, ns1_deleteDepartmentByDeptnoResponse_TYPE_QNAME);
        myns1_estimateCountResponse__EstimateCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.EstimateCountResponse.class, ns1_estimateCountResponse_TYPE_QNAME);
        myns1_insertDepartment__InsertDepartment_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.InsertDepartment.class, ns1_insertDepartment_TYPE_QNAME);
        myns1_updateDepartmentResponse__UpdateDepartmentResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.UpdateDepartmentResponse.class, ns1_updateDepartmentResponse_TYPE_QNAME);
        myns1_updateDepartment__UpdateDepartment_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.UpdateDepartment.class, ns1_updateDepartment_TYPE_QNAME);
        myns1_mergeDepartment__MergeDepartment_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.MergeDepartment.class, ns1_mergeDepartment_TYPE_QNAME);
        myns1_insertDepartmentResponse__InsertDepartmentResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.InsertDepartmentResponse.class, ns1_insertDepartmentResponse_TYPE_QNAME);
        myns1_findDepartmentByDeptno__FindDepartmentByDeptno_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.FindDepartmentByDeptno.class, ns1_findDepartmentByDeptno_TYPE_QNAME);
        myns1_retrieveDepartmentDataResponse__RetrieveDepartmentDataResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.RetrieveDepartmentDataResponse.class, ns1_retrieveDepartmentDataResponse_TYPE_QNAME);
        myns1_deleteDepartmentByDeptno__DeleteDepartmentByDeptno_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.DeleteDepartmentByDeptno.class, ns1_deleteDepartmentByDeptno_TYPE_QNAME);
        myns1_mergeDepartmentResponse__MergeDepartmentResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", remoteservices.MergeDepartmentResponse.class, ns1_mergeDepartmentResponse_TYPE_QNAME);
    }
    
    private static final QName _portName = new QName("urn:DeptService-example", "DeptServiceSoapHttpPort");
    private static final int insertDepartment_OPCODE = 0;
    private static final int retrieveDepartmentData_OPCODE = 1;
    private static final int deleteDepartmentByDeptno_OPCODE = 2;
    private static final int mergeDepartment_OPCODE = 3;
    private static final int findDepartmentByDeptno_OPCODE = 4;
    private static final int updateDepartment_OPCODE = 5;
    private static final int estimateCount_OPCODE = 6;
    private static final QName ns1_insertDepartment_insertDepartmentElement_QNAME = new QName("urn:DeptService-example", "insertDepartmentElement");
    private static final QName ns1_insertDepartment_TYPE_QNAME = new QName("urn:DeptService-example", "insertDepartment");
    private CombinedSerializer myns1_insertDepartment__InsertDepartment_LiteralSerializer;
    private static final QName ns1_insertDepartment_insertDepartmentResponseElement_QNAME = new QName("urn:DeptService-example", "insertDepartmentResponseElement");
    private static final QName ns1_insertDepartmentResponse_TYPE_QNAME = new QName("urn:DeptService-example", "insertDepartmentResponse");
    private CombinedSerializer myns1_insertDepartmentResponse__InsertDepartmentResponse_LiteralSerializer;
    private static final QName ns1_retrieveDepartmentData_retrieveDepartmentDataElement_QNAME = new QName("urn:DeptService-example", "retrieveDepartmentDataElement");
    private static final QName ns1_retrieveDepartmentData_TYPE_QNAME = new QName("urn:DeptService-example", "retrieveDepartmentData");
    private CombinedSerializer myns1_retrieveDepartmentData__RetrieveDepartmentData_LiteralSerializer;
    private static final QName ns1_retrieveDepartmentData_retrieveDepartmentDataResponseElement_QNAME = new QName("urn:DeptService-example", "retrieveDepartmentDataResponseElement");
    private static final QName ns1_retrieveDepartmentDataResponse_TYPE_QNAME = new QName("urn:DeptService-example", "retrieveDepartmentDataResponse");
    private CombinedSerializer myns1_retrieveDepartmentDataResponse__RetrieveDepartmentDataResponse_LiteralSerializer;
    private static final QName ns1_deleteDepartmentByDeptno_deleteDepartmentByDeptnoElement_QNAME = new QName("urn:DeptService-example", "deleteDepartmentByDeptnoElement");
    private static final QName ns1_deleteDepartmentByDeptno_TYPE_QNAME = new QName("urn:DeptService-example", "deleteDepartmentByDeptno");
    private CombinedSerializer myns1_deleteDepartmentByDeptno__DeleteDepartmentByDeptno_LiteralSerializer;
    private static final QName ns1_deleteDepartmentByDeptno_deleteDepartmentByDeptnoResponseElement_QNAME = new QName("urn:DeptService-example", "deleteDepartmentByDeptnoResponseElement");
    private static final QName ns1_deleteDepartmentByDeptnoResponse_TYPE_QNAME = new QName("urn:DeptService-example", "deleteDepartmentByDeptnoResponse");
    private CombinedSerializer myns1_deleteDepartmentByDeptnoResponse__DeleteDepartmentByDeptnoResponse_LiteralSerializer;
    private static final QName ns1_mergeDepartment_mergeDepartmentElement_QNAME = new QName("urn:DeptService-example", "mergeDepartmentElement");
    private static final QName ns1_mergeDepartment_TYPE_QNAME = new QName("urn:DeptService-example", "mergeDepartment");
    private CombinedSerializer myns1_mergeDepartment__MergeDepartment_LiteralSerializer;
    private static final QName ns1_mergeDepartment_mergeDepartmentResponseElement_QNAME = new QName("urn:DeptService-example", "mergeDepartmentResponseElement");
    private static final QName ns1_mergeDepartmentResponse_TYPE_QNAME = new QName("urn:DeptService-example", "mergeDepartmentResponse");
    private CombinedSerializer myns1_mergeDepartmentResponse__MergeDepartmentResponse_LiteralSerializer;
    private static final QName ns1_findDepartmentByDeptno_findDepartmentByDeptnoElement_QNAME = new QName("urn:DeptService-example", "findDepartmentByDeptnoElement");
    private static final QName ns1_findDepartmentByDeptno_TYPE_QNAME = new QName("urn:DeptService-example", "findDepartmentByDeptno");
    private CombinedSerializer myns1_findDepartmentByDeptno__FindDepartmentByDeptno_LiteralSerializer;
    private static final QName ns1_findDepartmentByDeptno_findDepartmentByDeptnoResponseElement_QNAME = new QName("urn:DeptService-example", "findDepartmentByDeptnoResponseElement");
    private static final QName ns1_findDepartmentByDeptnoResponse_TYPE_QNAME = new QName("urn:DeptService-example", "findDepartmentByDeptnoResponse");
    private CombinedSerializer myns1_findDepartmentByDeptnoResponse__FindDepartmentByDeptnoResponse_LiteralSerializer;
    private static final QName ns1_updateDepartment_updateDepartmentElement_QNAME = new QName("urn:DeptService-example", "updateDepartmentElement");
    private static final QName ns1_updateDepartment_TYPE_QNAME = new QName("urn:DeptService-example", "updateDepartment");
    private CombinedSerializer myns1_updateDepartment__UpdateDepartment_LiteralSerializer;
    private static final QName ns1_updateDepartment_updateDepartmentResponseElement_QNAME = new QName("urn:DeptService-example", "updateDepartmentResponseElement");
    private static final QName ns1_updateDepartmentResponse_TYPE_QNAME = new QName("urn:DeptService-example", "updateDepartmentResponse");
    private CombinedSerializer myns1_updateDepartmentResponse__UpdateDepartmentResponse_LiteralSerializer;
    private static final QName ns1_estimateCount_estimateCountElement_QNAME = new QName("urn:DeptService-example", "estimateCountElement");
    private static final QName ns1_estimateCount_TYPE_QNAME = new QName("urn:DeptService-example", "estimateCount");
    private CombinedSerializer myns1_estimateCount__EstimateCount_LiteralSerializer;
    private static final QName ns1_estimateCount_estimateCountResponseElement_QNAME = new QName("urn:DeptService-example", "estimateCountResponseElement");
    private static final QName ns1_estimateCountResponse_TYPE_QNAME = new QName("urn:DeptService-example", "estimateCountResponse");
    private CombinedSerializer myns1_estimateCountResponse__EstimateCountResponse_LiteralSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "urn:DeptService-example",
                                            "ns1", "http://deptws.server.webservice/types/",
                                            "ns2", "http://www.oracle.com/webservices/internal/literal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
    
}
