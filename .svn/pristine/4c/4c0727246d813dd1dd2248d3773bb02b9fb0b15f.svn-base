/* Copyright 2010, 2017, Oracle and/or its affiliates. All rights reserved. */
package test.model;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---------------------------------------------------------------------

public class TestImpl extends EntityImpl  {
  public static final int ID = 0;
  public static final int OPTIONONE = 1;
  public static final int OPTIONTWO = 2;

  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public TestImpl() {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("test.model.Test");
    }
    return mDefinitionObject;
  }


  /**
   * 
   *  Gets the attribute value for Id, using the alias name Id
   */
  public Number getId() {
    return (Number)getAttributeInternal(ID);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Id
   */
  public void setId(Number value) {
    setAttributeInternal(ID, value);
  }

  /**
   * 
   *  Gets the attribute value for OptionOne, using the alias name OptionOne
   */
  public String getOptionOne() {
    return (String)getAttributeInternal(OPTIONONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for OptionOne
   */
  public void setOptionOne(String value) {
    setAttributeInternal(OPTIONONE, value);
  }

  /**
   * 
   *  Gets the attribute value for OptionTwo, using the alias name OptionTwo
   */
  public String getOptionTwo() {
    return (String)getAttributeInternal(OPTIONTWO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for OptionTwo
   */
  public void setOptionTwo(String value) {
    setAttributeInternal(OPTIONTWO, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case ID:
        return getId();
      case OPTIONONE:
        return getOptionOne();
      case OPTIONTWO:
        return getOptionTwo();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case ID:
        setId((Number)value);
        return;
      case OPTIONONE:
        setOptionOne((String)value);
        return;
      case OPTIONTWO:
        setOptionTwo((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number id) {
    return new Key(new Object[] {id});
  }


}
